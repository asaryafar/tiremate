'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class DSFrmMoshakhasatEhraz
    Inherits DataSet
    
    Private tabletas_bas_rasteh As tas_bas_rastehDataTable
    
    Private tabletas_bas_reshteh_shoghli As tas_bas_reshteh_shoghliDataTable
    
    Private tabletas_tr_rasteh_reshteh As tas_tr_rasteh_reshtehDataTable
    
    Private tabletas_tr_groupreshtehtahsili_reshtehtahsili As tas_tr_groupreshtehtahsili_reshtehtahsiliDataTable
    
    Private tabletas_bas_madrak_tahsili As tas_bas_madrak_tahsiliDataTable
    
    Private tableDtGrdMadrak As DtGrdMadrakDataTable
    
    Private tabletas_tr_shoghlha_madrak_reshteha As tas_tr_shoghlha_madrak_reshtehaDataTable
    
    Private tableDtGrdReshteMadrak As DtGrdReshteMadrakDataTable
    
    Private tabletas_bas_reshteh_tahsili As tas_bas_reshteh_tahsiliDataTable
    
    Private tabletas_bas_group_estekhdami As tas_bas_group_estekhdamiDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tas_bas_rasteh")) Is Nothing) Then
                Me.Tables.Add(New tas_bas_rastehDataTable(ds.Tables("tas_bas_rasteh")))
            End If
            If (Not (ds.Tables("tas_bas_reshteh_shoghli")) Is Nothing) Then
                Me.Tables.Add(New tas_bas_reshteh_shoghliDataTable(ds.Tables("tas_bas_reshteh_shoghli")))
            End If
            If (Not (ds.Tables("tas_tr_rasteh_reshteh")) Is Nothing) Then
                Me.Tables.Add(New tas_tr_rasteh_reshtehDataTable(ds.Tables("tas_tr_rasteh_reshteh")))
            End If
            If (Not (ds.Tables("tas_tr_groupreshtehtahsili_reshtehtahsili")) Is Nothing) Then
                Me.Tables.Add(New tas_tr_groupreshtehtahsili_reshtehtahsiliDataTable(ds.Tables("tas_tr_groupreshtehtahsili_reshtehtahsili")))
            End If
            If (Not (ds.Tables("tas_bas_madrak_tahsili")) Is Nothing) Then
                Me.Tables.Add(New tas_bas_madrak_tahsiliDataTable(ds.Tables("tas_bas_madrak_tahsili")))
            End If
            If (Not (ds.Tables("DtGrdMadrak")) Is Nothing) Then
                Me.Tables.Add(New DtGrdMadrakDataTable(ds.Tables("DtGrdMadrak")))
            End If
            If (Not (ds.Tables("tas_tr_shoghlha_madrak_reshteha")) Is Nothing) Then
                Me.Tables.Add(New tas_tr_shoghlha_madrak_reshtehaDataTable(ds.Tables("tas_tr_shoghlha_madrak_reshteha")))
            End If
            If (Not (ds.Tables("DtGrdReshteMadrak")) Is Nothing) Then
                Me.Tables.Add(New DtGrdReshteMadrakDataTable(ds.Tables("DtGrdReshteMadrak")))
            End If
            If (Not (ds.Tables("tas_bas_reshteh_tahsili")) Is Nothing) Then
                Me.Tables.Add(New tas_bas_reshteh_tahsiliDataTable(ds.Tables("tas_bas_reshteh_tahsili")))
            End If
            If (Not (ds.Tables("tas_bas_group_estekhdami")) Is Nothing) Then
                Me.Tables.Add(New tas_bas_group_estekhdamiDataTable(ds.Tables("tas_bas_group_estekhdami")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tas_bas_rasteh As tas_bas_rastehDataTable
        Get
            Return Me.tabletas_bas_rasteh
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tas_bas_reshteh_shoghli As tas_bas_reshteh_shoghliDataTable
        Get
            Return Me.tabletas_bas_reshteh_shoghli
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tas_tr_rasteh_reshteh As tas_tr_rasteh_reshtehDataTable
        Get
            Return Me.tabletas_tr_rasteh_reshteh
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tas_tr_groupreshtehtahsili_reshtehtahsili As tas_tr_groupreshtehtahsili_reshtehtahsiliDataTable
        Get
            Return Me.tabletas_tr_groupreshtehtahsili_reshtehtahsili
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tas_bas_madrak_tahsili As tas_bas_madrak_tahsiliDataTable
        Get
            Return Me.tabletas_bas_madrak_tahsili
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DtGrdMadrak As DtGrdMadrakDataTable
        Get
            Return Me.tableDtGrdMadrak
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tas_tr_shoghlha_madrak_reshteha As tas_tr_shoghlha_madrak_reshtehaDataTable
        Get
            Return Me.tabletas_tr_shoghlha_madrak_reshteha
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DtGrdReshteMadrak As DtGrdReshteMadrakDataTable
        Get
            Return Me.tableDtGrdReshteMadrak
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tas_bas_reshteh_tahsili As tas_bas_reshteh_tahsiliDataTable
        Get
            Return Me.tabletas_bas_reshteh_tahsili
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tas_bas_group_estekhdami As tas_bas_group_estekhdamiDataTable
        Get
            Return Me.tabletas_bas_group_estekhdami
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As DSFrmMoshakhasatEhraz = CType(MyBase.Clone,DSFrmMoshakhasatEhraz)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("tas_bas_rasteh")) Is Nothing) Then
            Me.Tables.Add(New tas_bas_rastehDataTable(ds.Tables("tas_bas_rasteh")))
        End If
        If (Not (ds.Tables("tas_bas_reshteh_shoghli")) Is Nothing) Then
            Me.Tables.Add(New tas_bas_reshteh_shoghliDataTable(ds.Tables("tas_bas_reshteh_shoghli")))
        End If
        If (Not (ds.Tables("tas_tr_rasteh_reshteh")) Is Nothing) Then
            Me.Tables.Add(New tas_tr_rasteh_reshtehDataTable(ds.Tables("tas_tr_rasteh_reshteh")))
        End If
        If (Not (ds.Tables("tas_tr_groupreshtehtahsili_reshtehtahsili")) Is Nothing) Then
            Me.Tables.Add(New tas_tr_groupreshtehtahsili_reshtehtahsiliDataTable(ds.Tables("tas_tr_groupreshtehtahsili_reshtehtahsili")))
        End If
        If (Not (ds.Tables("tas_bas_madrak_tahsili")) Is Nothing) Then
            Me.Tables.Add(New tas_bas_madrak_tahsiliDataTable(ds.Tables("tas_bas_madrak_tahsili")))
        End If
        If (Not (ds.Tables("DtGrdMadrak")) Is Nothing) Then
            Me.Tables.Add(New DtGrdMadrakDataTable(ds.Tables("DtGrdMadrak")))
        End If
        If (Not (ds.Tables("tas_tr_shoghlha_madrak_reshteha")) Is Nothing) Then
            Me.Tables.Add(New tas_tr_shoghlha_madrak_reshtehaDataTable(ds.Tables("tas_tr_shoghlha_madrak_reshteha")))
        End If
        If (Not (ds.Tables("DtGrdReshteMadrak")) Is Nothing) Then
            Me.Tables.Add(New DtGrdReshteMadrakDataTable(ds.Tables("DtGrdReshteMadrak")))
        End If
        If (Not (ds.Tables("tas_bas_reshteh_tahsili")) Is Nothing) Then
            Me.Tables.Add(New tas_bas_reshteh_tahsiliDataTable(ds.Tables("tas_bas_reshteh_tahsili")))
        End If
        If (Not (ds.Tables("tas_bas_group_estekhdami")) Is Nothing) Then
            Me.Tables.Add(New tas_bas_group_estekhdamiDataTable(ds.Tables("tas_bas_group_estekhdami")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tabletas_bas_rasteh = CType(Me.Tables("tas_bas_rasteh"),tas_bas_rastehDataTable)
        If (Not (Me.tabletas_bas_rasteh) Is Nothing) Then
            Me.tabletas_bas_rasteh.InitVars
        End If
        Me.tabletas_bas_reshteh_shoghli = CType(Me.Tables("tas_bas_reshteh_shoghli"),tas_bas_reshteh_shoghliDataTable)
        If (Not (Me.tabletas_bas_reshteh_shoghli) Is Nothing) Then
            Me.tabletas_bas_reshteh_shoghli.InitVars
        End If
        Me.tabletas_tr_rasteh_reshteh = CType(Me.Tables("tas_tr_rasteh_reshteh"),tas_tr_rasteh_reshtehDataTable)
        If (Not (Me.tabletas_tr_rasteh_reshteh) Is Nothing) Then
            Me.tabletas_tr_rasteh_reshteh.InitVars
        End If
        Me.tabletas_tr_groupreshtehtahsili_reshtehtahsili = CType(Me.Tables("tas_tr_groupreshtehtahsili_reshtehtahsili"),tas_tr_groupreshtehtahsili_reshtehtahsiliDataTable)
        If (Not (Me.tabletas_tr_groupreshtehtahsili_reshtehtahsili) Is Nothing) Then
            Me.tabletas_tr_groupreshtehtahsili_reshtehtahsili.InitVars
        End If
        Me.tabletas_bas_madrak_tahsili = CType(Me.Tables("tas_bas_madrak_tahsili"),tas_bas_madrak_tahsiliDataTable)
        If (Not (Me.tabletas_bas_madrak_tahsili) Is Nothing) Then
            Me.tabletas_bas_madrak_tahsili.InitVars
        End If
        Me.tableDtGrdMadrak = CType(Me.Tables("DtGrdMadrak"),DtGrdMadrakDataTable)
        If (Not (Me.tableDtGrdMadrak) Is Nothing) Then
            Me.tableDtGrdMadrak.InitVars
        End If
        Me.tabletas_tr_shoghlha_madrak_reshteha = CType(Me.Tables("tas_tr_shoghlha_madrak_reshteha"),tas_tr_shoghlha_madrak_reshtehaDataTable)
        If (Not (Me.tabletas_tr_shoghlha_madrak_reshteha) Is Nothing) Then
            Me.tabletas_tr_shoghlha_madrak_reshteha.InitVars
        End If
        Me.tableDtGrdReshteMadrak = CType(Me.Tables("DtGrdReshteMadrak"),DtGrdReshteMadrakDataTable)
        If (Not (Me.tableDtGrdReshteMadrak) Is Nothing) Then
            Me.tableDtGrdReshteMadrak.InitVars
        End If
        Me.tabletas_bas_reshteh_tahsili = CType(Me.Tables("tas_bas_reshteh_tahsili"),tas_bas_reshteh_tahsiliDataTable)
        If (Not (Me.tabletas_bas_reshteh_tahsili) Is Nothing) Then
            Me.tabletas_bas_reshteh_tahsili.InitVars
        End If
        Me.tabletas_bas_group_estekhdami = CType(Me.Tables("tas_bas_group_estekhdami"),tas_bas_group_estekhdamiDataTable)
        If (Not (Me.tabletas_bas_group_estekhdami) Is Nothing) Then
            Me.tabletas_bas_group_estekhdami.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "DSFrmMoshakhasatEhraz"
        Me.Prefix = ""
        Me.Namespace = "http://www.tempuri.org/DSFrmMoshakhasatEhraz.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tabletas_bas_rasteh = New tas_bas_rastehDataTable
        Me.Tables.Add(Me.tabletas_bas_rasteh)
        Me.tabletas_bas_reshteh_shoghli = New tas_bas_reshteh_shoghliDataTable
        Me.Tables.Add(Me.tabletas_bas_reshteh_shoghli)
        Me.tabletas_tr_rasteh_reshteh = New tas_tr_rasteh_reshtehDataTable
        Me.Tables.Add(Me.tabletas_tr_rasteh_reshteh)
        Me.tabletas_tr_groupreshtehtahsili_reshtehtahsili = New tas_tr_groupreshtehtahsili_reshtehtahsiliDataTable
        Me.Tables.Add(Me.tabletas_tr_groupreshtehtahsili_reshtehtahsili)
        Me.tabletas_bas_madrak_tahsili = New tas_bas_madrak_tahsiliDataTable
        Me.Tables.Add(Me.tabletas_bas_madrak_tahsili)
        Me.tableDtGrdMadrak = New DtGrdMadrakDataTable
        Me.Tables.Add(Me.tableDtGrdMadrak)
        Me.tabletas_tr_shoghlha_madrak_reshteha = New tas_tr_shoghlha_madrak_reshtehaDataTable
        Me.Tables.Add(Me.tabletas_tr_shoghlha_madrak_reshteha)
        Me.tableDtGrdReshteMadrak = New DtGrdReshteMadrakDataTable
        Me.Tables.Add(Me.tableDtGrdReshteMadrak)
        Me.tabletas_bas_reshteh_tahsili = New tas_bas_reshteh_tahsiliDataTable
        Me.Tables.Add(Me.tabletas_bas_reshteh_tahsili)
        Me.tabletas_bas_group_estekhdami = New tas_bas_group_estekhdamiDataTable
        Me.Tables.Add(Me.tabletas_bas_group_estekhdami)
    End Sub
    
    Private Function ShouldSerializetas_bas_rasteh() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetas_bas_reshteh_shoghli() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetas_tr_rasteh_reshteh() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetas_tr_groupreshtehtahsili_reshtehtahsili() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetas_bas_madrak_tahsili() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeDtGrdMadrak() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetas_tr_shoghlha_madrak_reshteha() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeDtGrdReshteMadrak() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetas_bas_reshteh_tahsili() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetas_bas_group_estekhdami() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub tas_bas_rastehRowChangeEventHandler(ByVal sender As Object, ByVal e As tas_bas_rastehRowChangeEvent)
    
    Public Delegate Sub tas_bas_reshteh_shoghliRowChangeEventHandler(ByVal sender As Object, ByVal e As tas_bas_reshteh_shoghliRowChangeEvent)
    
    Public Delegate Sub tas_tr_rasteh_reshtehRowChangeEventHandler(ByVal sender As Object, ByVal e As tas_tr_rasteh_reshtehRowChangeEvent)
    
    Public Delegate Sub tas_tr_groupreshtehtahsili_reshtehtahsiliRowChangeEventHandler(ByVal sender As Object, ByVal e As tas_tr_groupreshtehtahsili_reshtehtahsiliRowChangeEvent)
    
    Public Delegate Sub tas_bas_madrak_tahsiliRowChangeEventHandler(ByVal sender As Object, ByVal e As tas_bas_madrak_tahsiliRowChangeEvent)
    
    Public Delegate Sub DtGrdMadrakRowChangeEventHandler(ByVal sender As Object, ByVal e As DtGrdMadrakRowChangeEvent)
    
    Public Delegate Sub tas_tr_shoghlha_madrak_reshtehaRowChangeEventHandler(ByVal sender As Object, ByVal e As tas_tr_shoghlha_madrak_reshtehaRowChangeEvent)
    
    Public Delegate Sub DtGrdReshteMadrakRowChangeEventHandler(ByVal sender As Object, ByVal e As DtGrdReshteMadrakRowChangeEvent)
    
    Public Delegate Sub tas_bas_reshteh_tahsiliRowChangeEventHandler(ByVal sender As Object, ByVal e As tas_bas_reshteh_tahsiliRowChangeEvent)
    
    Public Delegate Sub tas_bas_group_estekhdamiRowChangeEventHandler(ByVal sender As Object, ByVal e As tas_bas_group_estekhdamiRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_rastehDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columncode_rasteh As DataColumn
        
        Private columndesc_rasteh As DataColumn
        
        Friend Sub New()
            MyBase.New("tas_bas_rasteh")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property code_rastehColumn As DataColumn
            Get
                Return Me.columncode_rasteh
            End Get
        End Property
        
        Friend ReadOnly Property desc_rastehColumn As DataColumn
            Get
                Return Me.columndesc_rasteh
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tas_bas_rastehRow
            Get
                Return CType(Me.Rows(index),tas_bas_rastehRow)
            End Get
        End Property
        
        Public Event tas_bas_rastehRowChanged As tas_bas_rastehRowChangeEventHandler
        
        Public Event tas_bas_rastehRowChanging As tas_bas_rastehRowChangeEventHandler
        
        Public Event tas_bas_rastehRowDeleted As tas_bas_rastehRowChangeEventHandler
        
        Public Event tas_bas_rastehRowDeleting As tas_bas_rastehRowChangeEventHandler
        
        Public Overloads Sub Addtas_bas_rastehRow(ByVal row As tas_bas_rastehRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtas_bas_rastehRow(ByVal desc_rasteh As String) As tas_bas_rastehRow
            Dim rowtas_bas_rastehRow As tas_bas_rastehRow = CType(Me.NewRow,tas_bas_rastehRow)
            rowtas_bas_rastehRow.ItemArray = New Object() {Nothing, desc_rasteh}
            Me.Rows.Add(rowtas_bas_rastehRow)
            Return rowtas_bas_rastehRow
        End Function
        
        Public Function FindBycode_rasteh(ByVal code_rasteh As Short) As tas_bas_rastehRow
            Return CType(Me.Rows.Find(New Object() {code_rasteh}),tas_bas_rastehRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tas_bas_rastehDataTable = CType(MyBase.Clone,tas_bas_rastehDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tas_bas_rastehDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columncode_rasteh = Me.Columns("code_rasteh")
            Me.columndesc_rasteh = Me.Columns("desc_rasteh")
        End Sub
        
        Private Sub InitClass()
            Me.columncode_rasteh = New DataColumn("code_rasteh", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_rasteh)
            Me.columndesc_rasteh = New DataColumn("desc_rasteh", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndesc_rasteh)
            Me.Constraints.Add(New UniqueConstraint("Constraint1", New DataColumn() {Me.columncode_rasteh}, true))
            Me.columncode_rasteh.AutoIncrement = true
            Me.columncode_rasteh.AllowDBNull = false
            Me.columncode_rasteh.ReadOnly = true
            Me.columncode_rasteh.Unique = true
            Me.columndesc_rasteh.AllowDBNull = false
        End Sub
        
        Public Function Newtas_bas_rastehRow() As tas_bas_rastehRow
            Return CType(Me.NewRow,tas_bas_rastehRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tas_bas_rastehRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tas_bas_rastehRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tas_bas_rastehRowChangedEvent) Is Nothing) Then
                RaiseEvent tas_bas_rastehRowChanged(Me, New tas_bas_rastehRowChangeEvent(CType(e.Row,tas_bas_rastehRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tas_bas_rastehRowChangingEvent) Is Nothing) Then
                RaiseEvent tas_bas_rastehRowChanging(Me, New tas_bas_rastehRowChangeEvent(CType(e.Row,tas_bas_rastehRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tas_bas_rastehRowDeletedEvent) Is Nothing) Then
                RaiseEvent tas_bas_rastehRowDeleted(Me, New tas_bas_rastehRowChangeEvent(CType(e.Row,tas_bas_rastehRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tas_bas_rastehRowDeletingEvent) Is Nothing) Then
                RaiseEvent tas_bas_rastehRowDeleting(Me, New tas_bas_rastehRowChangeEvent(CType(e.Row,tas_bas_rastehRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetas_bas_rastehRow(ByVal row As tas_bas_rastehRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_rastehRow
        Inherits DataRow
        
        Private tabletas_bas_rasteh As tas_bas_rastehDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletas_bas_rasteh = CType(Me.Table,tas_bas_rastehDataTable)
        End Sub
        
        Public Property code_rasteh As Short
            Get
                Return CType(Me(Me.tabletas_bas_rasteh.code_rastehColumn),Short)
            End Get
            Set
                Me(Me.tabletas_bas_rasteh.code_rastehColumn) = value
            End Set
        End Property
        
        Public Property desc_rasteh As String
            Get
                Return CType(Me(Me.tabletas_bas_rasteh.desc_rastehColumn),String)
            End Get
            Set
                Me(Me.tabletas_bas_rasteh.desc_rastehColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_rastehRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tas_bas_rastehRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tas_bas_rastehRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tas_bas_rastehRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_reshteh_shoghliDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columncode_reshteh_shoghli As DataColumn
        
        Private columndesc_reshteh_shoghli As DataColumn
        
        Friend Sub New()
            MyBase.New("tas_bas_reshteh_shoghli")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property code_reshteh_shoghliColumn As DataColumn
            Get
                Return Me.columncode_reshteh_shoghli
            End Get
        End Property
        
        Friend ReadOnly Property desc_reshteh_shoghliColumn As DataColumn
            Get
                Return Me.columndesc_reshteh_shoghli
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tas_bas_reshteh_shoghliRow
            Get
                Return CType(Me.Rows(index),tas_bas_reshteh_shoghliRow)
            End Get
        End Property
        
        Public Event tas_bas_reshteh_shoghliRowChanged As tas_bas_reshteh_shoghliRowChangeEventHandler
        
        Public Event tas_bas_reshteh_shoghliRowChanging As tas_bas_reshteh_shoghliRowChangeEventHandler
        
        Public Event tas_bas_reshteh_shoghliRowDeleted As tas_bas_reshteh_shoghliRowChangeEventHandler
        
        Public Event tas_bas_reshteh_shoghliRowDeleting As tas_bas_reshteh_shoghliRowChangeEventHandler
        
        Public Overloads Sub Addtas_bas_reshteh_shoghliRow(ByVal row As tas_bas_reshteh_shoghliRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtas_bas_reshteh_shoghliRow(ByVal desc_reshteh_shoghli As String) As tas_bas_reshteh_shoghliRow
            Dim rowtas_bas_reshteh_shoghliRow As tas_bas_reshteh_shoghliRow = CType(Me.NewRow,tas_bas_reshteh_shoghliRow)
            rowtas_bas_reshteh_shoghliRow.ItemArray = New Object() {Nothing, desc_reshteh_shoghli}
            Me.Rows.Add(rowtas_bas_reshteh_shoghliRow)
            Return rowtas_bas_reshteh_shoghliRow
        End Function
        
        Public Function FindBycode_reshteh_shoghli(ByVal code_reshteh_shoghli As Short) As tas_bas_reshteh_shoghliRow
            Return CType(Me.Rows.Find(New Object() {code_reshteh_shoghli}),tas_bas_reshteh_shoghliRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tas_bas_reshteh_shoghliDataTable = CType(MyBase.Clone,tas_bas_reshteh_shoghliDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tas_bas_reshteh_shoghliDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columncode_reshteh_shoghli = Me.Columns("code_reshteh_shoghli")
            Me.columndesc_reshteh_shoghli = Me.Columns("desc_reshteh_shoghli")
        End Sub
        
        Private Sub InitClass()
            Me.columncode_reshteh_shoghli = New DataColumn("code_reshteh_shoghli", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_reshteh_shoghli)
            Me.columndesc_reshteh_shoghli = New DataColumn("desc_reshteh_shoghli", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndesc_reshteh_shoghli)
            Me.Constraints.Add(New UniqueConstraint("Constraint1", New DataColumn() {Me.columncode_reshteh_shoghli}, true))
            Me.columncode_reshteh_shoghli.AutoIncrement = true
            Me.columncode_reshteh_shoghli.AllowDBNull = false
            Me.columncode_reshteh_shoghli.ReadOnly = true
            Me.columncode_reshteh_shoghli.Unique = true
            Me.columndesc_reshteh_shoghli.AllowDBNull = false
        End Sub
        
        Public Function Newtas_bas_reshteh_shoghliRow() As tas_bas_reshteh_shoghliRow
            Return CType(Me.NewRow,tas_bas_reshteh_shoghliRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tas_bas_reshteh_shoghliRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tas_bas_reshteh_shoghliRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tas_bas_reshteh_shoghliRowChangedEvent) Is Nothing) Then
                RaiseEvent tas_bas_reshteh_shoghliRowChanged(Me, New tas_bas_reshteh_shoghliRowChangeEvent(CType(e.Row,tas_bas_reshteh_shoghliRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tas_bas_reshteh_shoghliRowChangingEvent) Is Nothing) Then
                RaiseEvent tas_bas_reshteh_shoghliRowChanging(Me, New tas_bas_reshteh_shoghliRowChangeEvent(CType(e.Row,tas_bas_reshteh_shoghliRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tas_bas_reshteh_shoghliRowDeletedEvent) Is Nothing) Then
                RaiseEvent tas_bas_reshteh_shoghliRowDeleted(Me, New tas_bas_reshteh_shoghliRowChangeEvent(CType(e.Row,tas_bas_reshteh_shoghliRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tas_bas_reshteh_shoghliRowDeletingEvent) Is Nothing) Then
                RaiseEvent tas_bas_reshteh_shoghliRowDeleting(Me, New tas_bas_reshteh_shoghliRowChangeEvent(CType(e.Row,tas_bas_reshteh_shoghliRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetas_bas_reshteh_shoghliRow(ByVal row As tas_bas_reshteh_shoghliRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_reshteh_shoghliRow
        Inherits DataRow
        
        Private tabletas_bas_reshteh_shoghli As tas_bas_reshteh_shoghliDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletas_bas_reshteh_shoghli = CType(Me.Table,tas_bas_reshteh_shoghliDataTable)
        End Sub
        
        Public Property code_reshteh_shoghli As Short
            Get
                Return CType(Me(Me.tabletas_bas_reshteh_shoghli.code_reshteh_shoghliColumn),Short)
            End Get
            Set
                Me(Me.tabletas_bas_reshteh_shoghli.code_reshteh_shoghliColumn) = value
            End Set
        End Property
        
        Public Property desc_reshteh_shoghli As String
            Get
                Return CType(Me(Me.tabletas_bas_reshteh_shoghli.desc_reshteh_shoghliColumn),String)
            End Get
            Set
                Me(Me.tabletas_bas_reshteh_shoghli.desc_reshteh_shoghliColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_reshteh_shoghliRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tas_bas_reshteh_shoghliRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tas_bas_reshteh_shoghliRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tas_bas_reshteh_shoghliRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_tr_rasteh_reshtehDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnid_rasteh_reshteh As DataColumn
        
        Private columncode_rasteh As DataColumn
        
        Private columncode_reshteh_shoghli As DataColumn
        
        Private columnremark As DataColumn
        
        Private columncode_bandar As DataColumn
        
        Private columncode_markaz As DataColumn
        
        Private columncode_group_estekhdami_from As DataColumn
        
        Private columncode_group_estekhdami_to As DataColumn
        
        Friend Sub New()
            MyBase.New("tas_tr_rasteh_reshteh")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property id_rasteh_reshtehColumn As DataColumn
            Get
                Return Me.columnid_rasteh_reshteh
            End Get
        End Property
        
        Friend ReadOnly Property code_rastehColumn As DataColumn
            Get
                Return Me.columncode_rasteh
            End Get
        End Property
        
        Friend ReadOnly Property code_reshteh_shoghliColumn As DataColumn
            Get
                Return Me.columncode_reshteh_shoghli
            End Get
        End Property
        
        Friend ReadOnly Property remarkColumn As DataColumn
            Get
                Return Me.columnremark
            End Get
        End Property
        
        Friend ReadOnly Property code_bandarColumn As DataColumn
            Get
                Return Me.columncode_bandar
            End Get
        End Property
        
        Friend ReadOnly Property code_markazColumn As DataColumn
            Get
                Return Me.columncode_markaz
            End Get
        End Property
        
        Friend ReadOnly Property code_group_estekhdami_fromColumn As DataColumn
            Get
                Return Me.columncode_group_estekhdami_from
            End Get
        End Property
        
        Friend ReadOnly Property code_group_estekhdami_toColumn As DataColumn
            Get
                Return Me.columncode_group_estekhdami_to
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tas_tr_rasteh_reshtehRow
            Get
                Return CType(Me.Rows(index),tas_tr_rasteh_reshtehRow)
            End Get
        End Property
        
        Public Event tas_tr_rasteh_reshtehRowChanged As tas_tr_rasteh_reshtehRowChangeEventHandler
        
        Public Event tas_tr_rasteh_reshtehRowChanging As tas_tr_rasteh_reshtehRowChangeEventHandler
        
        Public Event tas_tr_rasteh_reshtehRowDeleted As tas_tr_rasteh_reshtehRowChangeEventHandler
        
        Public Event tas_tr_rasteh_reshtehRowDeleting As tas_tr_rasteh_reshtehRowChangeEventHandler
        
        Public Overloads Sub Addtas_tr_rasteh_reshtehRow(ByVal row As tas_tr_rasteh_reshtehRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtas_tr_rasteh_reshtehRow(ByVal id_rasteh_reshteh As String, ByVal code_rasteh As Short, ByVal code_reshteh_shoghli As Short, ByVal remark As String, ByVal code_bandar As Short, ByVal code_markaz As String, ByVal code_group_estekhdami_from As Short, ByVal code_group_estekhdami_to As Short) As tas_tr_rasteh_reshtehRow
            Dim rowtas_tr_rasteh_reshtehRow As tas_tr_rasteh_reshtehRow = CType(Me.NewRow,tas_tr_rasteh_reshtehRow)
            rowtas_tr_rasteh_reshtehRow.ItemArray = New Object() {id_rasteh_reshteh, code_rasteh, code_reshteh_shoghli, remark, code_bandar, code_markaz, code_group_estekhdami_from, code_group_estekhdami_to}
            Me.Rows.Add(rowtas_tr_rasteh_reshtehRow)
            Return rowtas_tr_rasteh_reshtehRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tas_tr_rasteh_reshtehDataTable = CType(MyBase.Clone,tas_tr_rasteh_reshtehDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tas_tr_rasteh_reshtehDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnid_rasteh_reshteh = Me.Columns("id_rasteh_reshteh")
            Me.columncode_rasteh = Me.Columns("code_rasteh")
            Me.columncode_reshteh_shoghli = Me.Columns("code_reshteh_shoghli")
            Me.columnremark = Me.Columns("remark")
            Me.columncode_bandar = Me.Columns("code_bandar")
            Me.columncode_markaz = Me.Columns("code_markaz")
            Me.columncode_group_estekhdami_from = Me.Columns("code_group_estekhdami_from")
            Me.columncode_group_estekhdami_to = Me.Columns("code_group_estekhdami_to")
        End Sub
        
        Private Sub InitClass()
            Me.columnid_rasteh_reshteh = New DataColumn("id_rasteh_reshteh", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnid_rasteh_reshteh)
            Me.columncode_rasteh = New DataColumn("code_rasteh", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_rasteh)
            Me.columncode_reshteh_shoghli = New DataColumn("code_reshteh_shoghli", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_reshteh_shoghli)
            Me.columnremark = New DataColumn("remark", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnremark)
            Me.columncode_bandar = New DataColumn("code_bandar", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_bandar)
            Me.columncode_markaz = New DataColumn("code_markaz", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_markaz)
            Me.columncode_group_estekhdami_from = New DataColumn("code_group_estekhdami_from", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_group_estekhdami_from)
            Me.columncode_group_estekhdami_to = New DataColumn("code_group_estekhdami_to", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_group_estekhdami_to)
            Me.columncode_rasteh.AllowDBNull = false
        End Sub
        
        Public Function Newtas_tr_rasteh_reshtehRow() As tas_tr_rasteh_reshtehRow
            Return CType(Me.NewRow,tas_tr_rasteh_reshtehRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tas_tr_rasteh_reshtehRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tas_tr_rasteh_reshtehRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tas_tr_rasteh_reshtehRowChangedEvent) Is Nothing) Then
                RaiseEvent tas_tr_rasteh_reshtehRowChanged(Me, New tas_tr_rasteh_reshtehRowChangeEvent(CType(e.Row,tas_tr_rasteh_reshtehRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tas_tr_rasteh_reshtehRowChangingEvent) Is Nothing) Then
                RaiseEvent tas_tr_rasteh_reshtehRowChanging(Me, New tas_tr_rasteh_reshtehRowChangeEvent(CType(e.Row,tas_tr_rasteh_reshtehRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tas_tr_rasteh_reshtehRowDeletedEvent) Is Nothing) Then
                RaiseEvent tas_tr_rasteh_reshtehRowDeleted(Me, New tas_tr_rasteh_reshtehRowChangeEvent(CType(e.Row,tas_tr_rasteh_reshtehRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tas_tr_rasteh_reshtehRowDeletingEvent) Is Nothing) Then
                RaiseEvent tas_tr_rasteh_reshtehRowDeleting(Me, New tas_tr_rasteh_reshtehRowChangeEvent(CType(e.Row,tas_tr_rasteh_reshtehRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetas_tr_rasteh_reshtehRow(ByVal row As tas_tr_rasteh_reshtehRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_tr_rasteh_reshtehRow
        Inherits DataRow
        
        Private tabletas_tr_rasteh_reshteh As tas_tr_rasteh_reshtehDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletas_tr_rasteh_reshteh = CType(Me.Table,tas_tr_rasteh_reshtehDataTable)
        End Sub
        
        Public Property id_rasteh_reshteh As String
            Get
                Try 
                    Return CType(Me(Me.tabletas_tr_rasteh_reshteh.id_rasteh_reshtehColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_tr_rasteh_reshteh.id_rasteh_reshtehColumn) = value
            End Set
        End Property
        
        Public Property code_rasteh As Short
            Get
                Return CType(Me(Me.tabletas_tr_rasteh_reshteh.code_rastehColumn),Short)
            End Get
            Set
                Me(Me.tabletas_tr_rasteh_reshteh.code_rastehColumn) = value
            End Set
        End Property
        
        Public Property code_reshteh_shoghli As Short
            Get
                Try 
                    Return CType(Me(Me.tabletas_tr_rasteh_reshteh.code_reshteh_shoghliColumn),Short)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_tr_rasteh_reshteh.code_reshteh_shoghliColumn) = value
            End Set
        End Property
        
        Public Property remark As String
            Get
                Try 
                    Return CType(Me(Me.tabletas_tr_rasteh_reshteh.remarkColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_tr_rasteh_reshteh.remarkColumn) = value
            End Set
        End Property
        
        Public Property code_bandar As Short
            Get
                Try 
                    Return CType(Me(Me.tabletas_tr_rasteh_reshteh.code_bandarColumn),Short)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_tr_rasteh_reshteh.code_bandarColumn) = value
            End Set
        End Property
        
        Public Property code_markaz As String
            Get
                Try 
                    Return CType(Me(Me.tabletas_tr_rasteh_reshteh.code_markazColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_tr_rasteh_reshteh.code_markazColumn) = value
            End Set
        End Property
        
        Public Property code_group_estekhdami_from As Short
            Get
                Try 
                    Return CType(Me(Me.tabletas_tr_rasteh_reshteh.code_group_estekhdami_fromColumn),Short)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_tr_rasteh_reshteh.code_group_estekhdami_fromColumn) = value
            End Set
        End Property
        
        Public Property code_group_estekhdami_to As Short
            Get
                Try 
                    Return CType(Me(Me.tabletas_tr_rasteh_reshteh.code_group_estekhdami_toColumn),Short)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_tr_rasteh_reshteh.code_group_estekhdami_toColumn) = value
            End Set
        End Property
        
        Public Function Isid_rasteh_reshtehNull() As Boolean
            Return Me.IsNull(Me.tabletas_tr_rasteh_reshteh.id_rasteh_reshtehColumn)
        End Function
        
        Public Sub Setid_rasteh_reshtehNull()
            Me(Me.tabletas_tr_rasteh_reshteh.id_rasteh_reshtehColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Iscode_reshteh_shoghliNull() As Boolean
            Return Me.IsNull(Me.tabletas_tr_rasteh_reshteh.code_reshteh_shoghliColumn)
        End Function
        
        Public Sub Setcode_reshteh_shoghliNull()
            Me(Me.tabletas_tr_rasteh_reshteh.code_reshteh_shoghliColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsremarkNull() As Boolean
            Return Me.IsNull(Me.tabletas_tr_rasteh_reshteh.remarkColumn)
        End Function
        
        Public Sub SetremarkNull()
            Me(Me.tabletas_tr_rasteh_reshteh.remarkColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Iscode_bandarNull() As Boolean
            Return Me.IsNull(Me.tabletas_tr_rasteh_reshteh.code_bandarColumn)
        End Function
        
        Public Sub Setcode_bandarNull()
            Me(Me.tabletas_tr_rasteh_reshteh.code_bandarColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Iscode_markazNull() As Boolean
            Return Me.IsNull(Me.tabletas_tr_rasteh_reshteh.code_markazColumn)
        End Function
        
        Public Sub Setcode_markazNull()
            Me(Me.tabletas_tr_rasteh_reshteh.code_markazColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Iscode_group_estekhdami_fromNull() As Boolean
            Return Me.IsNull(Me.tabletas_tr_rasteh_reshteh.code_group_estekhdami_fromColumn)
        End Function
        
        Public Sub Setcode_group_estekhdami_fromNull()
            Me(Me.tabletas_tr_rasteh_reshteh.code_group_estekhdami_fromColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Iscode_group_estekhdami_toNull() As Boolean
            Return Me.IsNull(Me.tabletas_tr_rasteh_reshteh.code_group_estekhdami_toColumn)
        End Function
        
        Public Sub Setcode_group_estekhdami_toNull()
            Me(Me.tabletas_tr_rasteh_reshteh.code_group_estekhdami_toColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_tr_rasteh_reshtehRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tas_tr_rasteh_reshtehRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tas_tr_rasteh_reshtehRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tas_tr_rasteh_reshtehRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_tr_groupreshtehtahsili_reshtehtahsiliDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columncode_group_reshteh_tahsili As DataColumn
        
        Private columncode_reshteh_tahsili As DataColumn
        
        Private columncode_bandar As DataColumn
        
        Private columncode_markaz As DataColumn
        
        Friend Sub New()
            MyBase.New("tas_tr_groupreshtehtahsili_reshtehtahsili")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property code_group_reshteh_tahsiliColumn As DataColumn
            Get
                Return Me.columncode_group_reshteh_tahsili
            End Get
        End Property
        
        Friend ReadOnly Property code_reshteh_tahsiliColumn As DataColumn
            Get
                Return Me.columncode_reshteh_tahsili
            End Get
        End Property
        
        Friend ReadOnly Property code_bandarColumn As DataColumn
            Get
                Return Me.columncode_bandar
            End Get
        End Property
        
        Friend ReadOnly Property code_markazColumn As DataColumn
            Get
                Return Me.columncode_markaz
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tas_tr_groupreshtehtahsili_reshtehtahsiliRow
            Get
                Return CType(Me.Rows(index),tas_tr_groupreshtehtahsili_reshtehtahsiliRow)
            End Get
        End Property
        
        Public Event tas_tr_groupreshtehtahsili_reshtehtahsiliRowChanged As tas_tr_groupreshtehtahsili_reshtehtahsiliRowChangeEventHandler
        
        Public Event tas_tr_groupreshtehtahsili_reshtehtahsiliRowChanging As tas_tr_groupreshtehtahsili_reshtehtahsiliRowChangeEventHandler
        
        Public Event tas_tr_groupreshtehtahsili_reshtehtahsiliRowDeleted As tas_tr_groupreshtehtahsili_reshtehtahsiliRowChangeEventHandler
        
        Public Event tas_tr_groupreshtehtahsili_reshtehtahsiliRowDeleting As tas_tr_groupreshtehtahsili_reshtehtahsiliRowChangeEventHandler
        
        Public Overloads Sub Addtas_tr_groupreshtehtahsili_reshtehtahsiliRow(ByVal row As tas_tr_groupreshtehtahsili_reshtehtahsiliRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtas_tr_groupreshtehtahsili_reshtehtahsiliRow(ByVal code_group_reshteh_tahsili As String, ByVal code_reshteh_tahsili As String, ByVal code_bandar As Short, ByVal code_markaz As Short) As tas_tr_groupreshtehtahsili_reshtehtahsiliRow
            Dim rowtas_tr_groupreshtehtahsili_reshtehtahsiliRow As tas_tr_groupreshtehtahsili_reshtehtahsiliRow = CType(Me.NewRow,tas_tr_groupreshtehtahsili_reshtehtahsiliRow)
            rowtas_tr_groupreshtehtahsili_reshtehtahsiliRow.ItemArray = New Object() {code_group_reshteh_tahsili, code_reshteh_tahsili, code_bandar, code_markaz}
            Me.Rows.Add(rowtas_tr_groupreshtehtahsili_reshtehtahsiliRow)
            Return rowtas_tr_groupreshtehtahsili_reshtehtahsiliRow
        End Function
        
        Public Function FindBycode_group_reshteh_tahsilicode_reshteh_tahsili(ByVal code_group_reshteh_tahsili As String, ByVal code_reshteh_tahsili As String) As tas_tr_groupreshtehtahsili_reshtehtahsiliRow
            Return CType(Me.Rows.Find(New Object() {code_group_reshteh_tahsili, code_reshteh_tahsili}),tas_tr_groupreshtehtahsili_reshtehtahsiliRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tas_tr_groupreshtehtahsili_reshtehtahsiliDataTable = CType(MyBase.Clone,tas_tr_groupreshtehtahsili_reshtehtahsiliDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tas_tr_groupreshtehtahsili_reshtehtahsiliDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columncode_group_reshteh_tahsili = Me.Columns("code_group_reshteh_tahsili")
            Me.columncode_reshteh_tahsili = Me.Columns("code_reshteh_tahsili")
            Me.columncode_bandar = Me.Columns("code_bandar")
            Me.columncode_markaz = Me.Columns("code_markaz")
        End Sub
        
        Private Sub InitClass()
            Me.columncode_group_reshteh_tahsili = New DataColumn("code_group_reshteh_tahsili", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_group_reshteh_tahsili)
            Me.columncode_reshteh_tahsili = New DataColumn("code_reshteh_tahsili", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_reshteh_tahsili)
            Me.columncode_bandar = New DataColumn("code_bandar", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_bandar)
            Me.columncode_markaz = New DataColumn("code_markaz", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_markaz)
            Me.Constraints.Add(New UniqueConstraint("Constraint1", New DataColumn() {Me.columncode_group_reshteh_tahsili, Me.columncode_reshteh_tahsili}, true))
            Me.columncode_group_reshteh_tahsili.AllowDBNull = false
            Me.columncode_reshteh_tahsili.AllowDBNull = false
            Me.columncode_bandar.AllowDBNull = false
        End Sub
        
        Public Function Newtas_tr_groupreshtehtahsili_reshtehtahsiliRow() As tas_tr_groupreshtehtahsili_reshtehtahsiliRow
            Return CType(Me.NewRow,tas_tr_groupreshtehtahsili_reshtehtahsiliRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tas_tr_groupreshtehtahsili_reshtehtahsiliRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tas_tr_groupreshtehtahsili_reshtehtahsiliRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tas_tr_groupreshtehtahsili_reshtehtahsiliRowChangedEvent) Is Nothing) Then
                RaiseEvent tas_tr_groupreshtehtahsili_reshtehtahsiliRowChanged(Me, New tas_tr_groupreshtehtahsili_reshtehtahsiliRowChangeEvent(CType(e.Row,tas_tr_groupreshtehtahsili_reshtehtahsiliRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tas_tr_groupreshtehtahsili_reshtehtahsiliRowChangingEvent) Is Nothing) Then
                RaiseEvent tas_tr_groupreshtehtahsili_reshtehtahsiliRowChanging(Me, New tas_tr_groupreshtehtahsili_reshtehtahsiliRowChangeEvent(CType(e.Row,tas_tr_groupreshtehtahsili_reshtehtahsiliRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tas_tr_groupreshtehtahsili_reshtehtahsiliRowDeletedEvent) Is Nothing) Then
                RaiseEvent tas_tr_groupreshtehtahsili_reshtehtahsiliRowDeleted(Me, New tas_tr_groupreshtehtahsili_reshtehtahsiliRowChangeEvent(CType(e.Row,tas_tr_groupreshtehtahsili_reshtehtahsiliRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tas_tr_groupreshtehtahsili_reshtehtahsiliRowDeletingEvent) Is Nothing) Then
                RaiseEvent tas_tr_groupreshtehtahsili_reshtehtahsiliRowDeleting(Me, New tas_tr_groupreshtehtahsili_reshtehtahsiliRowChangeEvent(CType(e.Row,tas_tr_groupreshtehtahsili_reshtehtahsiliRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetas_tr_groupreshtehtahsili_reshtehtahsiliRow(ByVal row As tas_tr_groupreshtehtahsili_reshtehtahsiliRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_tr_groupreshtehtahsili_reshtehtahsiliRow
        Inherits DataRow
        
        Private tabletas_tr_groupreshtehtahsili_reshtehtahsili As tas_tr_groupreshtehtahsili_reshtehtahsiliDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletas_tr_groupreshtehtahsili_reshtehtahsili = CType(Me.Table,tas_tr_groupreshtehtahsili_reshtehtahsiliDataTable)
        End Sub
        
        Public Property code_group_reshteh_tahsili As String
            Get
                Return CType(Me(Me.tabletas_tr_groupreshtehtahsili_reshtehtahsili.code_group_reshteh_tahsiliColumn),String)
            End Get
            Set
                Me(Me.tabletas_tr_groupreshtehtahsili_reshtehtahsili.code_group_reshteh_tahsiliColumn) = value
            End Set
        End Property
        
        Public Property code_reshteh_tahsili As String
            Get
                Return CType(Me(Me.tabletas_tr_groupreshtehtahsili_reshtehtahsili.code_reshteh_tahsiliColumn),String)
            End Get
            Set
                Me(Me.tabletas_tr_groupreshtehtahsili_reshtehtahsili.code_reshteh_tahsiliColumn) = value
            End Set
        End Property
        
        Public Property code_bandar As Short
            Get
                Return CType(Me(Me.tabletas_tr_groupreshtehtahsili_reshtehtahsili.code_bandarColumn),Short)
            End Get
            Set
                Me(Me.tabletas_tr_groupreshtehtahsili_reshtehtahsili.code_bandarColumn) = value
            End Set
        End Property
        
        Public Property code_markaz As Short
            Get
                Try 
                    Return CType(Me(Me.tabletas_tr_groupreshtehtahsili_reshtehtahsili.code_markazColumn),Short)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_tr_groupreshtehtahsili_reshtehtahsili.code_markazColumn) = value
            End Set
        End Property
        
        Public Function Iscode_markazNull() As Boolean
            Return Me.IsNull(Me.tabletas_tr_groupreshtehtahsili_reshtehtahsili.code_markazColumn)
        End Function
        
        Public Sub Setcode_markazNull()
            Me(Me.tabletas_tr_groupreshtehtahsili_reshtehtahsili.code_markazColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_tr_groupreshtehtahsili_reshtehtahsiliRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tas_tr_groupreshtehtahsili_reshtehtahsiliRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tas_tr_groupreshtehtahsili_reshtehtahsiliRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tas_tr_groupreshtehtahsili_reshtehtahsiliRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_madrak_tahsiliDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columncode_madrak_tahsili As DataColumn
        
        Private columndesc_madrak_tahsili As DataColumn
        
        Friend Sub New()
            MyBase.New("tas_bas_madrak_tahsili")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property code_madrak_tahsiliColumn As DataColumn
            Get
                Return Me.columncode_madrak_tahsili
            End Get
        End Property
        
        Friend ReadOnly Property desc_madrak_tahsiliColumn As DataColumn
            Get
                Return Me.columndesc_madrak_tahsili
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tas_bas_madrak_tahsiliRow
            Get
                Return CType(Me.Rows(index),tas_bas_madrak_tahsiliRow)
            End Get
        End Property
        
        Public Event tas_bas_madrak_tahsiliRowChanged As tas_bas_madrak_tahsiliRowChangeEventHandler
        
        Public Event tas_bas_madrak_tahsiliRowChanging As tas_bas_madrak_tahsiliRowChangeEventHandler
        
        Public Event tas_bas_madrak_tahsiliRowDeleted As tas_bas_madrak_tahsiliRowChangeEventHandler
        
        Public Event tas_bas_madrak_tahsiliRowDeleting As tas_bas_madrak_tahsiliRowChangeEventHandler
        
        Public Overloads Sub Addtas_bas_madrak_tahsiliRow(ByVal row As tas_bas_madrak_tahsiliRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtas_bas_madrak_tahsiliRow(ByVal desc_madrak_tahsili As String) As tas_bas_madrak_tahsiliRow
            Dim rowtas_bas_madrak_tahsiliRow As tas_bas_madrak_tahsiliRow = CType(Me.NewRow,tas_bas_madrak_tahsiliRow)
            rowtas_bas_madrak_tahsiliRow.ItemArray = New Object() {Nothing, desc_madrak_tahsili}
            Me.Rows.Add(rowtas_bas_madrak_tahsiliRow)
            Return rowtas_bas_madrak_tahsiliRow
        End Function
        
        Public Function FindBycode_madrak_tahsili(ByVal code_madrak_tahsili As Integer) As tas_bas_madrak_tahsiliRow
            Return CType(Me.Rows.Find(New Object() {code_madrak_tahsili}),tas_bas_madrak_tahsiliRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tas_bas_madrak_tahsiliDataTable = CType(MyBase.Clone,tas_bas_madrak_tahsiliDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tas_bas_madrak_tahsiliDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columncode_madrak_tahsili = Me.Columns("code_madrak_tahsili")
            Me.columndesc_madrak_tahsili = Me.Columns("desc_madrak_tahsili")
        End Sub
        
        Private Sub InitClass()
            Me.columncode_madrak_tahsili = New DataColumn("code_madrak_tahsili", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_madrak_tahsili)
            Me.columndesc_madrak_tahsili = New DataColumn("desc_madrak_tahsili", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndesc_madrak_tahsili)
            Me.Constraints.Add(New UniqueConstraint("Constraint1", New DataColumn() {Me.columncode_madrak_tahsili}, true))
            Me.columncode_madrak_tahsili.AutoIncrement = true
            Me.columncode_madrak_tahsili.AllowDBNull = false
            Me.columncode_madrak_tahsili.ReadOnly = true
            Me.columncode_madrak_tahsili.Unique = true
        End Sub
        
        Public Function Newtas_bas_madrak_tahsiliRow() As tas_bas_madrak_tahsiliRow
            Return CType(Me.NewRow,tas_bas_madrak_tahsiliRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tas_bas_madrak_tahsiliRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tas_bas_madrak_tahsiliRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tas_bas_madrak_tahsiliRowChangedEvent) Is Nothing) Then
                RaiseEvent tas_bas_madrak_tahsiliRowChanged(Me, New tas_bas_madrak_tahsiliRowChangeEvent(CType(e.Row,tas_bas_madrak_tahsiliRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tas_bas_madrak_tahsiliRowChangingEvent) Is Nothing) Then
                RaiseEvent tas_bas_madrak_tahsiliRowChanging(Me, New tas_bas_madrak_tahsiliRowChangeEvent(CType(e.Row,tas_bas_madrak_tahsiliRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tas_bas_madrak_tahsiliRowDeletedEvent) Is Nothing) Then
                RaiseEvent tas_bas_madrak_tahsiliRowDeleted(Me, New tas_bas_madrak_tahsiliRowChangeEvent(CType(e.Row,tas_bas_madrak_tahsiliRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tas_bas_madrak_tahsiliRowDeletingEvent) Is Nothing) Then
                RaiseEvent tas_bas_madrak_tahsiliRowDeleting(Me, New tas_bas_madrak_tahsiliRowChangeEvent(CType(e.Row,tas_bas_madrak_tahsiliRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetas_bas_madrak_tahsiliRow(ByVal row As tas_bas_madrak_tahsiliRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_madrak_tahsiliRow
        Inherits DataRow
        
        Private tabletas_bas_madrak_tahsili As tas_bas_madrak_tahsiliDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletas_bas_madrak_tahsili = CType(Me.Table,tas_bas_madrak_tahsiliDataTable)
        End Sub
        
        Public Property code_madrak_tahsili As Integer
            Get
                Return CType(Me(Me.tabletas_bas_madrak_tahsili.code_madrak_tahsiliColumn),Integer)
            End Get
            Set
                Me(Me.tabletas_bas_madrak_tahsili.code_madrak_tahsiliColumn) = value
            End Set
        End Property
        
        Public Property desc_madrak_tahsili As String
            Get
                Try 
                    Return CType(Me(Me.tabletas_bas_madrak_tahsili.desc_madrak_tahsiliColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_bas_madrak_tahsili.desc_madrak_tahsiliColumn) = value
            End Set
        End Property
        
        Public Function Isdesc_madrak_tahsiliNull() As Boolean
            Return Me.IsNull(Me.tabletas_bas_madrak_tahsili.desc_madrak_tahsiliColumn)
        End Function
        
        Public Sub Setdesc_madrak_tahsiliNull()
            Me(Me.tabletas_bas_madrak_tahsili.desc_madrak_tahsiliColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_madrak_tahsiliRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tas_bas_madrak_tahsiliRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tas_bas_madrak_tahsiliRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tas_bas_madrak_tahsiliRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class DtGrdMadrakDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columncode_madrak_tahsili As DataColumn
        
        Private columncode_reshteh_tahsili As DataColumn
        
        Private columndesc_madrak_tahsili As DataColumn
        
        Private columnflag As DataColumn
        
        Friend Sub New()
            MyBase.New("DtGrdMadrak")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property code_madrak_tahsiliColumn As DataColumn
            Get
                Return Me.columncode_madrak_tahsili
            End Get
        End Property
        
        Friend ReadOnly Property code_reshteh_tahsiliColumn As DataColumn
            Get
                Return Me.columncode_reshteh_tahsili
            End Get
        End Property
        
        Friend ReadOnly Property desc_madrak_tahsiliColumn As DataColumn
            Get
                Return Me.columndesc_madrak_tahsili
            End Get
        End Property
        
        Friend ReadOnly Property flagColumn As DataColumn
            Get
                Return Me.columnflag
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As DtGrdMadrakRow
            Get
                Return CType(Me.Rows(index),DtGrdMadrakRow)
            End Get
        End Property
        
        Public Event DtGrdMadrakRowChanged As DtGrdMadrakRowChangeEventHandler
        
        Public Event DtGrdMadrakRowChanging As DtGrdMadrakRowChangeEventHandler
        
        Public Event DtGrdMadrakRowDeleted As DtGrdMadrakRowChangeEventHandler
        
        Public Event DtGrdMadrakRowDeleting As DtGrdMadrakRowChangeEventHandler
        
        Public Overloads Sub AddDtGrdMadrakRow(ByVal row As DtGrdMadrakRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddDtGrdMadrakRow(ByVal code_madrak_tahsili As String, ByVal code_reshteh_tahsili As String, ByVal desc_madrak_tahsili As String, ByVal flag As Boolean) As DtGrdMadrakRow
            Dim rowDtGrdMadrakRow As DtGrdMadrakRow = CType(Me.NewRow,DtGrdMadrakRow)
            rowDtGrdMadrakRow.ItemArray = New Object() {code_madrak_tahsili, code_reshteh_tahsili, desc_madrak_tahsili, flag}
            Me.Rows.Add(rowDtGrdMadrakRow)
            Return rowDtGrdMadrakRow
        End Function
        
        Public Function FindBycode_madrak_tahsilicode_reshteh_tahsili(ByVal code_madrak_tahsili As String, ByVal code_reshteh_tahsili As String) As DtGrdMadrakRow
            Return CType(Me.Rows.Find(New Object() {code_madrak_tahsili, code_reshteh_tahsili}),DtGrdMadrakRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As DtGrdMadrakDataTable = CType(MyBase.Clone,DtGrdMadrakDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New DtGrdMadrakDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columncode_madrak_tahsili = Me.Columns("code_madrak_tahsili")
            Me.columncode_reshteh_tahsili = Me.Columns("code_reshteh_tahsili")
            Me.columndesc_madrak_tahsili = Me.Columns("desc_madrak_tahsili")
            Me.columnflag = Me.Columns("flag")
        End Sub
        
        Private Sub InitClass()
            Me.columncode_madrak_tahsili = New DataColumn("code_madrak_tahsili", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_madrak_tahsili)
            Me.columncode_reshteh_tahsili = New DataColumn("code_reshteh_tahsili", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_reshteh_tahsili)
            Me.columndesc_madrak_tahsili = New DataColumn("desc_madrak_tahsili", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndesc_madrak_tahsili)
            Me.columnflag = New DataColumn("flag", GetType(System.Boolean), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnflag)
            Me.Constraints.Add(New UniqueConstraint("DSFrmMoshakhasatEhrazKey1", New DataColumn() {Me.columncode_madrak_tahsili, Me.columncode_reshteh_tahsili}, true))
            Me.columncode_madrak_tahsili.AllowDBNull = false
            Me.columncode_reshteh_tahsili.AllowDBNull = false
        End Sub
        
        Public Function NewDtGrdMadrakRow() As DtGrdMadrakRow
            Return CType(Me.NewRow,DtGrdMadrakRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New DtGrdMadrakRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(DtGrdMadrakRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DtGrdMadrakRowChangedEvent) Is Nothing) Then
                RaiseEvent DtGrdMadrakRowChanged(Me, New DtGrdMadrakRowChangeEvent(CType(e.Row,DtGrdMadrakRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DtGrdMadrakRowChangingEvent) Is Nothing) Then
                RaiseEvent DtGrdMadrakRowChanging(Me, New DtGrdMadrakRowChangeEvent(CType(e.Row,DtGrdMadrakRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DtGrdMadrakRowDeletedEvent) Is Nothing) Then
                RaiseEvent DtGrdMadrakRowDeleted(Me, New DtGrdMadrakRowChangeEvent(CType(e.Row,DtGrdMadrakRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DtGrdMadrakRowDeletingEvent) Is Nothing) Then
                RaiseEvent DtGrdMadrakRowDeleting(Me, New DtGrdMadrakRowChangeEvent(CType(e.Row,DtGrdMadrakRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveDtGrdMadrakRow(ByVal row As DtGrdMadrakRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class DtGrdMadrakRow
        Inherits DataRow
        
        Private tableDtGrdMadrak As DtGrdMadrakDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableDtGrdMadrak = CType(Me.Table,DtGrdMadrakDataTable)
        End Sub
        
        Public Property code_madrak_tahsili As String
            Get
                Return CType(Me(Me.tableDtGrdMadrak.code_madrak_tahsiliColumn),String)
            End Get
            Set
                Me(Me.tableDtGrdMadrak.code_madrak_tahsiliColumn) = value
            End Set
        End Property
        
        Public Property code_reshteh_tahsili As String
            Get
                Return CType(Me(Me.tableDtGrdMadrak.code_reshteh_tahsiliColumn),String)
            End Get
            Set
                Me(Me.tableDtGrdMadrak.code_reshteh_tahsiliColumn) = value
            End Set
        End Property
        
        Public Property desc_madrak_tahsili As String
            Get
                Try 
                    Return CType(Me(Me.tableDtGrdMadrak.desc_madrak_tahsiliColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDtGrdMadrak.desc_madrak_tahsiliColumn) = value
            End Set
        End Property
        
        Public Property flag As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableDtGrdMadrak.flagColumn),Boolean)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDtGrdMadrak.flagColumn) = value
            End Set
        End Property
        
        Public Function Isdesc_madrak_tahsiliNull() As Boolean
            Return Me.IsNull(Me.tableDtGrdMadrak.desc_madrak_tahsiliColumn)
        End Function
        
        Public Sub Setdesc_madrak_tahsiliNull()
            Me(Me.tableDtGrdMadrak.desc_madrak_tahsiliColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsflagNull() As Boolean
            Return Me.IsNull(Me.tableDtGrdMadrak.flagColumn)
        End Function
        
        Public Sub SetflagNull()
            Me(Me.tableDtGrdMadrak.flagColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class DtGrdMadrakRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As DtGrdMadrakRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As DtGrdMadrakRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As DtGrdMadrakRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_tr_shoghlha_madrak_reshtehaDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columncode_madrak_tahsili As DataColumn
        
        Private columncode_reshteh_tahsili As DataColumn
        
        Private columnremark As DataColumn
        
        Private columncode_bandar As DataColumn
        
        Private columncode_markaz As DataColumn
        
        Private columndesc_reshteh_tahsili As DataColumn
        
        Private columnflag As DataColumn
        
        Friend Sub New()
            MyBase.New("tas_tr_shoghlha_madrak_reshteha")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property code_madrak_tahsiliColumn As DataColumn
            Get
                Return Me.columncode_madrak_tahsili
            End Get
        End Property
        
        Friend ReadOnly Property code_reshteh_tahsiliColumn As DataColumn
            Get
                Return Me.columncode_reshteh_tahsili
            End Get
        End Property
        
        Friend ReadOnly Property remarkColumn As DataColumn
            Get
                Return Me.columnremark
            End Get
        End Property
        
        Friend ReadOnly Property code_bandarColumn As DataColumn
            Get
                Return Me.columncode_bandar
            End Get
        End Property
        
        Friend ReadOnly Property code_markazColumn As DataColumn
            Get
                Return Me.columncode_markaz
            End Get
        End Property
        
        Friend ReadOnly Property desc_reshteh_tahsiliColumn As DataColumn
            Get
                Return Me.columndesc_reshteh_tahsili
            End Get
        End Property
        
        Friend ReadOnly Property flagColumn As DataColumn
            Get
                Return Me.columnflag
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tas_tr_shoghlha_madrak_reshtehaRow
            Get
                Return CType(Me.Rows(index),tas_tr_shoghlha_madrak_reshtehaRow)
            End Get
        End Property
        
        Public Event tas_tr_shoghlha_madrak_reshtehaRowChanged As tas_tr_shoghlha_madrak_reshtehaRowChangeEventHandler
        
        Public Event tas_tr_shoghlha_madrak_reshtehaRowChanging As tas_tr_shoghlha_madrak_reshtehaRowChangeEventHandler
        
        Public Event tas_tr_shoghlha_madrak_reshtehaRowDeleted As tas_tr_shoghlha_madrak_reshtehaRowChangeEventHandler
        
        Public Event tas_tr_shoghlha_madrak_reshtehaRowDeleting As tas_tr_shoghlha_madrak_reshtehaRowChangeEventHandler
        
        Public Overloads Sub Addtas_tr_shoghlha_madrak_reshtehaRow(ByVal row As tas_tr_shoghlha_madrak_reshtehaRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtas_tr_shoghlha_madrak_reshtehaRow(ByVal code_madrak_tahsili As String, ByVal code_reshteh_tahsili As String, ByVal remark As String, ByVal code_bandar As Short, ByVal code_markaz As Short, ByVal desc_reshteh_tahsili As String, ByVal flag As Boolean) As tas_tr_shoghlha_madrak_reshtehaRow
            Dim rowtas_tr_shoghlha_madrak_reshtehaRow As tas_tr_shoghlha_madrak_reshtehaRow = CType(Me.NewRow,tas_tr_shoghlha_madrak_reshtehaRow)
            rowtas_tr_shoghlha_madrak_reshtehaRow.ItemArray = New Object() {code_madrak_tahsili, code_reshteh_tahsili, remark, code_bandar, code_markaz, desc_reshteh_tahsili, flag}
            Me.Rows.Add(rowtas_tr_shoghlha_madrak_reshtehaRow)
            Return rowtas_tr_shoghlha_madrak_reshtehaRow
        End Function
        
        Public Function FindBycode_madrak_tahsilicode_reshteh_tahsili(ByVal code_madrak_tahsili As String, ByVal code_reshteh_tahsili As String) As tas_tr_shoghlha_madrak_reshtehaRow
            Return CType(Me.Rows.Find(New Object() {code_madrak_tahsili, code_reshteh_tahsili}),tas_tr_shoghlha_madrak_reshtehaRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tas_tr_shoghlha_madrak_reshtehaDataTable = CType(MyBase.Clone,tas_tr_shoghlha_madrak_reshtehaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tas_tr_shoghlha_madrak_reshtehaDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columncode_madrak_tahsili = Me.Columns("code_madrak_tahsili")
            Me.columncode_reshteh_tahsili = Me.Columns("code_reshteh_tahsili")
            Me.columnremark = Me.Columns("remark")
            Me.columncode_bandar = Me.Columns("code_bandar")
            Me.columncode_markaz = Me.Columns("code_markaz")
            Me.columndesc_reshteh_tahsili = Me.Columns("desc_reshteh_tahsili")
            Me.columnflag = Me.Columns("flag")
        End Sub
        
        Private Sub InitClass()
            Me.columncode_madrak_tahsili = New DataColumn("code_madrak_tahsili", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_madrak_tahsili)
            Me.columncode_reshteh_tahsili = New DataColumn("code_reshteh_tahsili", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_reshteh_tahsili)
            Me.columnremark = New DataColumn("remark", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnremark)
            Me.columncode_bandar = New DataColumn("code_bandar", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_bandar)
            Me.columncode_markaz = New DataColumn("code_markaz", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_markaz)
            Me.columndesc_reshteh_tahsili = New DataColumn("desc_reshteh_tahsili", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndesc_reshteh_tahsili)
            Me.columnflag = New DataColumn("flag", GetType(System.Boolean), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnflag)
            Me.Constraints.Add(New UniqueConstraint("DSFrmMoshakhasatEhrazKey2", New DataColumn() {Me.columncode_madrak_tahsili, Me.columncode_reshteh_tahsili}, true))
            Me.columncode_madrak_tahsili.AllowDBNull = false
            Me.columncode_reshteh_tahsili.AllowDBNull = false
            Me.columncode_bandar.AllowDBNull = false
            Me.columndesc_reshteh_tahsili.AllowDBNull = false
        End Sub
        
        Public Function Newtas_tr_shoghlha_madrak_reshtehaRow() As tas_tr_shoghlha_madrak_reshtehaRow
            Return CType(Me.NewRow,tas_tr_shoghlha_madrak_reshtehaRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tas_tr_shoghlha_madrak_reshtehaRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tas_tr_shoghlha_madrak_reshtehaRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tas_tr_shoghlha_madrak_reshtehaRowChangedEvent) Is Nothing) Then
                RaiseEvent tas_tr_shoghlha_madrak_reshtehaRowChanged(Me, New tas_tr_shoghlha_madrak_reshtehaRowChangeEvent(CType(e.Row,tas_tr_shoghlha_madrak_reshtehaRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tas_tr_shoghlha_madrak_reshtehaRowChangingEvent) Is Nothing) Then
                RaiseEvent tas_tr_shoghlha_madrak_reshtehaRowChanging(Me, New tas_tr_shoghlha_madrak_reshtehaRowChangeEvent(CType(e.Row,tas_tr_shoghlha_madrak_reshtehaRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tas_tr_shoghlha_madrak_reshtehaRowDeletedEvent) Is Nothing) Then
                RaiseEvent tas_tr_shoghlha_madrak_reshtehaRowDeleted(Me, New tas_tr_shoghlha_madrak_reshtehaRowChangeEvent(CType(e.Row,tas_tr_shoghlha_madrak_reshtehaRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tas_tr_shoghlha_madrak_reshtehaRowDeletingEvent) Is Nothing) Then
                RaiseEvent tas_tr_shoghlha_madrak_reshtehaRowDeleting(Me, New tas_tr_shoghlha_madrak_reshtehaRowChangeEvent(CType(e.Row,tas_tr_shoghlha_madrak_reshtehaRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetas_tr_shoghlha_madrak_reshtehaRow(ByVal row As tas_tr_shoghlha_madrak_reshtehaRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_tr_shoghlha_madrak_reshtehaRow
        Inherits DataRow
        
        Private tabletas_tr_shoghlha_madrak_reshteha As tas_tr_shoghlha_madrak_reshtehaDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletas_tr_shoghlha_madrak_reshteha = CType(Me.Table,tas_tr_shoghlha_madrak_reshtehaDataTable)
        End Sub
        
        Public Property code_madrak_tahsili As String
            Get
                Return CType(Me(Me.tabletas_tr_shoghlha_madrak_reshteha.code_madrak_tahsiliColumn),String)
            End Get
            Set
                Me(Me.tabletas_tr_shoghlha_madrak_reshteha.code_madrak_tahsiliColumn) = value
            End Set
        End Property
        
        Public Property code_reshteh_tahsili As String
            Get
                Return CType(Me(Me.tabletas_tr_shoghlha_madrak_reshteha.code_reshteh_tahsiliColumn),String)
            End Get
            Set
                Me(Me.tabletas_tr_shoghlha_madrak_reshteha.code_reshteh_tahsiliColumn) = value
            End Set
        End Property
        
        Public Property remark As String
            Get
                Try 
                    Return CType(Me(Me.tabletas_tr_shoghlha_madrak_reshteha.remarkColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_tr_shoghlha_madrak_reshteha.remarkColumn) = value
            End Set
        End Property
        
        Public Property code_bandar As Short
            Get
                Return CType(Me(Me.tabletas_tr_shoghlha_madrak_reshteha.code_bandarColumn),Short)
            End Get
            Set
                Me(Me.tabletas_tr_shoghlha_madrak_reshteha.code_bandarColumn) = value
            End Set
        End Property
        
        Public Property code_markaz As Short
            Get
                Try 
                    Return CType(Me(Me.tabletas_tr_shoghlha_madrak_reshteha.code_markazColumn),Short)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_tr_shoghlha_madrak_reshteha.code_markazColumn) = value
            End Set
        End Property
        
        Public Property desc_reshteh_tahsili As String
            Get
                Return CType(Me(Me.tabletas_tr_shoghlha_madrak_reshteha.desc_reshteh_tahsiliColumn),String)
            End Get
            Set
                Me(Me.tabletas_tr_shoghlha_madrak_reshteha.desc_reshteh_tahsiliColumn) = value
            End Set
        End Property
        
        Public Property flag As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletas_tr_shoghlha_madrak_reshteha.flagColumn),Boolean)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_tr_shoghlha_madrak_reshteha.flagColumn) = value
            End Set
        End Property
        
        Public Function IsremarkNull() As Boolean
            Return Me.IsNull(Me.tabletas_tr_shoghlha_madrak_reshteha.remarkColumn)
        End Function
        
        Public Sub SetremarkNull()
            Me(Me.tabletas_tr_shoghlha_madrak_reshteha.remarkColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Iscode_markazNull() As Boolean
            Return Me.IsNull(Me.tabletas_tr_shoghlha_madrak_reshteha.code_markazColumn)
        End Function
        
        Public Sub Setcode_markazNull()
            Me(Me.tabletas_tr_shoghlha_madrak_reshteha.code_markazColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsflagNull() As Boolean
            Return Me.IsNull(Me.tabletas_tr_shoghlha_madrak_reshteha.flagColumn)
        End Function
        
        Public Sub SetflagNull()
            Me(Me.tabletas_tr_shoghlha_madrak_reshteha.flagColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_tr_shoghlha_madrak_reshtehaRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tas_tr_shoghlha_madrak_reshtehaRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tas_tr_shoghlha_madrak_reshtehaRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tas_tr_shoghlha_madrak_reshtehaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class DtGrdReshteMadrakDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columncode_reshteh_tahsili As DataColumn
        
        Private columndesc_reshteh_tahsili As DataColumn
        
        Private columnremark As DataColumn
        
        Friend Sub New()
            MyBase.New("DtGrdReshteMadrak")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property code_reshteh_tahsiliColumn As DataColumn
            Get
                Return Me.columncode_reshteh_tahsili
            End Get
        End Property
        
        Friend ReadOnly Property desc_reshteh_tahsiliColumn As DataColumn
            Get
                Return Me.columndesc_reshteh_tahsili
            End Get
        End Property
        
        Friend ReadOnly Property remarkColumn As DataColumn
            Get
                Return Me.columnremark
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As DtGrdReshteMadrakRow
            Get
                Return CType(Me.Rows(index),DtGrdReshteMadrakRow)
            End Get
        End Property
        
        Public Event DtGrdReshteMadrakRowChanged As DtGrdReshteMadrakRowChangeEventHandler
        
        Public Event DtGrdReshteMadrakRowChanging As DtGrdReshteMadrakRowChangeEventHandler
        
        Public Event DtGrdReshteMadrakRowDeleted As DtGrdReshteMadrakRowChangeEventHandler
        
        Public Event DtGrdReshteMadrakRowDeleting As DtGrdReshteMadrakRowChangeEventHandler
        
        Public Overloads Sub AddDtGrdReshteMadrakRow(ByVal row As DtGrdReshteMadrakRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddDtGrdReshteMadrakRow(ByVal code_reshteh_tahsili As String, ByVal desc_reshteh_tahsili As String, ByVal remark As String) As DtGrdReshteMadrakRow
            Dim rowDtGrdReshteMadrakRow As DtGrdReshteMadrakRow = CType(Me.NewRow,DtGrdReshteMadrakRow)
            rowDtGrdReshteMadrakRow.ItemArray = New Object() {code_reshteh_tahsili, desc_reshteh_tahsili, remark}
            Me.Rows.Add(rowDtGrdReshteMadrakRow)
            Return rowDtGrdReshteMadrakRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As DtGrdReshteMadrakDataTable = CType(MyBase.Clone,DtGrdReshteMadrakDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New DtGrdReshteMadrakDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columncode_reshteh_tahsili = Me.Columns("code_reshteh_tahsili")
            Me.columndesc_reshteh_tahsili = Me.Columns("desc_reshteh_tahsili")
            Me.columnremark = Me.Columns("remark")
        End Sub
        
        Private Sub InitClass()
            Me.columncode_reshteh_tahsili = New DataColumn("code_reshteh_tahsili", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_reshteh_tahsili)
            Me.columndesc_reshteh_tahsili = New DataColumn("desc_reshteh_tahsili", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndesc_reshteh_tahsili)
            Me.columnremark = New DataColumn("remark", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnremark)
        End Sub
        
        Public Function NewDtGrdReshteMadrakRow() As DtGrdReshteMadrakRow
            Return CType(Me.NewRow,DtGrdReshteMadrakRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New DtGrdReshteMadrakRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(DtGrdReshteMadrakRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DtGrdReshteMadrakRowChangedEvent) Is Nothing) Then
                RaiseEvent DtGrdReshteMadrakRowChanged(Me, New DtGrdReshteMadrakRowChangeEvent(CType(e.Row,DtGrdReshteMadrakRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DtGrdReshteMadrakRowChangingEvent) Is Nothing) Then
                RaiseEvent DtGrdReshteMadrakRowChanging(Me, New DtGrdReshteMadrakRowChangeEvent(CType(e.Row,DtGrdReshteMadrakRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DtGrdReshteMadrakRowDeletedEvent) Is Nothing) Then
                RaiseEvent DtGrdReshteMadrakRowDeleted(Me, New DtGrdReshteMadrakRowChangeEvent(CType(e.Row,DtGrdReshteMadrakRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DtGrdReshteMadrakRowDeletingEvent) Is Nothing) Then
                RaiseEvent DtGrdReshteMadrakRowDeleting(Me, New DtGrdReshteMadrakRowChangeEvent(CType(e.Row,DtGrdReshteMadrakRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveDtGrdReshteMadrakRow(ByVal row As DtGrdReshteMadrakRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class DtGrdReshteMadrakRow
        Inherits DataRow
        
        Private tableDtGrdReshteMadrak As DtGrdReshteMadrakDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableDtGrdReshteMadrak = CType(Me.Table,DtGrdReshteMadrakDataTable)
        End Sub
        
        Public Property code_reshteh_tahsili As String
            Get
                Try 
                    Return CType(Me(Me.tableDtGrdReshteMadrak.code_reshteh_tahsiliColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDtGrdReshteMadrak.code_reshteh_tahsiliColumn) = value
            End Set
        End Property
        
        Public Property desc_reshteh_tahsili As String
            Get
                Try 
                    Return CType(Me(Me.tableDtGrdReshteMadrak.desc_reshteh_tahsiliColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDtGrdReshteMadrak.desc_reshteh_tahsiliColumn) = value
            End Set
        End Property
        
        Public Property remark As String
            Get
                Try 
                    Return CType(Me(Me.tableDtGrdReshteMadrak.remarkColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDtGrdReshteMadrak.remarkColumn) = value
            End Set
        End Property
        
        Public Function Iscode_reshteh_tahsiliNull() As Boolean
            Return Me.IsNull(Me.tableDtGrdReshteMadrak.code_reshteh_tahsiliColumn)
        End Function
        
        Public Sub Setcode_reshteh_tahsiliNull()
            Me(Me.tableDtGrdReshteMadrak.code_reshteh_tahsiliColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isdesc_reshteh_tahsiliNull() As Boolean
            Return Me.IsNull(Me.tableDtGrdReshteMadrak.desc_reshteh_tahsiliColumn)
        End Function
        
        Public Sub Setdesc_reshteh_tahsiliNull()
            Me(Me.tableDtGrdReshteMadrak.desc_reshteh_tahsiliColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsremarkNull() As Boolean
            Return Me.IsNull(Me.tableDtGrdReshteMadrak.remarkColumn)
        End Function
        
        Public Sub SetremarkNull()
            Me(Me.tableDtGrdReshteMadrak.remarkColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class DtGrdReshteMadrakRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As DtGrdReshteMadrakRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As DtGrdReshteMadrakRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As DtGrdReshteMadrakRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_reshteh_tahsiliDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columncode_reshteh_tahsili As DataColumn
        
        Private columndesc_reshteh_tahsili As DataColumn
        
        Friend Sub New()
            MyBase.New("tas_bas_reshteh_tahsili")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property code_reshteh_tahsiliColumn As DataColumn
            Get
                Return Me.columncode_reshteh_tahsili
            End Get
        End Property
        
        Friend ReadOnly Property desc_reshteh_tahsiliColumn As DataColumn
            Get
                Return Me.columndesc_reshteh_tahsili
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tas_bas_reshteh_tahsiliRow
            Get
                Return CType(Me.Rows(index),tas_bas_reshteh_tahsiliRow)
            End Get
        End Property
        
        Public Event tas_bas_reshteh_tahsiliRowChanged As tas_bas_reshteh_tahsiliRowChangeEventHandler
        
        Public Event tas_bas_reshteh_tahsiliRowChanging As tas_bas_reshteh_tahsiliRowChangeEventHandler
        
        Public Event tas_bas_reshteh_tahsiliRowDeleted As tas_bas_reshteh_tahsiliRowChangeEventHandler
        
        Public Event tas_bas_reshteh_tahsiliRowDeleting As tas_bas_reshteh_tahsiliRowChangeEventHandler
        
        Public Overloads Sub Addtas_bas_reshteh_tahsiliRow(ByVal row As tas_bas_reshteh_tahsiliRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtas_bas_reshteh_tahsiliRow(ByVal desc_reshteh_tahsili As String) As tas_bas_reshteh_tahsiliRow
            Dim rowtas_bas_reshteh_tahsiliRow As tas_bas_reshteh_tahsiliRow = CType(Me.NewRow,tas_bas_reshteh_tahsiliRow)
            rowtas_bas_reshteh_tahsiliRow.ItemArray = New Object() {Nothing, desc_reshteh_tahsili}
            Me.Rows.Add(rowtas_bas_reshteh_tahsiliRow)
            Return rowtas_bas_reshteh_tahsiliRow
        End Function
        
        Public Function FindBycode_reshteh_tahsili(ByVal code_reshteh_tahsili As Integer) As tas_bas_reshteh_tahsiliRow
            Return CType(Me.Rows.Find(New Object() {code_reshteh_tahsili}),tas_bas_reshteh_tahsiliRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tas_bas_reshteh_tahsiliDataTable = CType(MyBase.Clone,tas_bas_reshteh_tahsiliDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tas_bas_reshteh_tahsiliDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columncode_reshteh_tahsili = Me.Columns("code_reshteh_tahsili")
            Me.columndesc_reshteh_tahsili = Me.Columns("desc_reshteh_tahsili")
        End Sub
        
        Private Sub InitClass()
            Me.columncode_reshteh_tahsili = New DataColumn("code_reshteh_tahsili", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_reshteh_tahsili)
            Me.columndesc_reshteh_tahsili = New DataColumn("desc_reshteh_tahsili", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndesc_reshteh_tahsili)
            Me.Constraints.Add(New UniqueConstraint("Constraint1", New DataColumn() {Me.columncode_reshteh_tahsili}, true))
            Me.columncode_reshteh_tahsili.AutoIncrement = true
            Me.columncode_reshteh_tahsili.AllowDBNull = false
            Me.columncode_reshteh_tahsili.ReadOnly = true
            Me.columncode_reshteh_tahsili.Unique = true
            Me.columndesc_reshteh_tahsili.AllowDBNull = false
        End Sub
        
        Public Function Newtas_bas_reshteh_tahsiliRow() As tas_bas_reshteh_tahsiliRow
            Return CType(Me.NewRow,tas_bas_reshteh_tahsiliRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tas_bas_reshteh_tahsiliRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tas_bas_reshteh_tahsiliRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tas_bas_reshteh_tahsiliRowChangedEvent) Is Nothing) Then
                RaiseEvent tas_bas_reshteh_tahsiliRowChanged(Me, New tas_bas_reshteh_tahsiliRowChangeEvent(CType(e.Row,tas_bas_reshteh_tahsiliRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tas_bas_reshteh_tahsiliRowChangingEvent) Is Nothing) Then
                RaiseEvent tas_bas_reshteh_tahsiliRowChanging(Me, New tas_bas_reshteh_tahsiliRowChangeEvent(CType(e.Row,tas_bas_reshteh_tahsiliRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tas_bas_reshteh_tahsiliRowDeletedEvent) Is Nothing) Then
                RaiseEvent tas_bas_reshteh_tahsiliRowDeleted(Me, New tas_bas_reshteh_tahsiliRowChangeEvent(CType(e.Row,tas_bas_reshteh_tahsiliRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tas_bas_reshteh_tahsiliRowDeletingEvent) Is Nothing) Then
                RaiseEvent tas_bas_reshteh_tahsiliRowDeleting(Me, New tas_bas_reshteh_tahsiliRowChangeEvent(CType(e.Row,tas_bas_reshteh_tahsiliRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetas_bas_reshteh_tahsiliRow(ByVal row As tas_bas_reshteh_tahsiliRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_reshteh_tahsiliRow
        Inherits DataRow
        
        Private tabletas_bas_reshteh_tahsili As tas_bas_reshteh_tahsiliDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletas_bas_reshteh_tahsili = CType(Me.Table,tas_bas_reshteh_tahsiliDataTable)
        End Sub
        
        Public Property code_reshteh_tahsili As Integer
            Get
                Return CType(Me(Me.tabletas_bas_reshteh_tahsili.code_reshteh_tahsiliColumn),Integer)
            End Get
            Set
                Me(Me.tabletas_bas_reshteh_tahsili.code_reshteh_tahsiliColumn) = value
            End Set
        End Property
        
        Public Property desc_reshteh_tahsili As String
            Get
                Return CType(Me(Me.tabletas_bas_reshteh_tahsili.desc_reshteh_tahsiliColumn),String)
            End Get
            Set
                Me(Me.tabletas_bas_reshteh_tahsili.desc_reshteh_tahsiliColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_reshteh_tahsiliRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tas_bas_reshteh_tahsiliRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tas_bas_reshteh_tahsiliRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tas_bas_reshteh_tahsiliRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_group_estekhdamiDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columndesc_group_estekhdami As DataColumn
        
        Private columncode_group_estekhdami As DataColumn
        
        Friend Sub New()
            MyBase.New("tas_bas_group_estekhdami")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property desc_group_estekhdamiColumn As DataColumn
            Get
                Return Me.columndesc_group_estekhdami
            End Get
        End Property
        
        Friend ReadOnly Property code_group_estekhdamiColumn As DataColumn
            Get
                Return Me.columncode_group_estekhdami
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tas_bas_group_estekhdamiRow
            Get
                Return CType(Me.Rows(index),tas_bas_group_estekhdamiRow)
            End Get
        End Property
        
        Public Event tas_bas_group_estekhdamiRowChanged As tas_bas_group_estekhdamiRowChangeEventHandler
        
        Public Event tas_bas_group_estekhdamiRowChanging As tas_bas_group_estekhdamiRowChangeEventHandler
        
        Public Event tas_bas_group_estekhdamiRowDeleted As tas_bas_group_estekhdamiRowChangeEventHandler
        
        Public Event tas_bas_group_estekhdamiRowDeleting As tas_bas_group_estekhdamiRowChangeEventHandler
        
        Public Overloads Sub Addtas_bas_group_estekhdamiRow(ByVal row As tas_bas_group_estekhdamiRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtas_bas_group_estekhdamiRow(ByVal desc_group_estekhdami As String, ByVal code_group_estekhdami As String) As tas_bas_group_estekhdamiRow
            Dim rowtas_bas_group_estekhdamiRow As tas_bas_group_estekhdamiRow = CType(Me.NewRow,tas_bas_group_estekhdamiRow)
            rowtas_bas_group_estekhdamiRow.ItemArray = New Object() {desc_group_estekhdami, code_group_estekhdami}
            Me.Rows.Add(rowtas_bas_group_estekhdamiRow)
            Return rowtas_bas_group_estekhdamiRow
        End Function
        
        Public Function FindBycode_group_estekhdami(ByVal code_group_estekhdami As String) As tas_bas_group_estekhdamiRow
            Return CType(Me.Rows.Find(New Object() {code_group_estekhdami}),tas_bas_group_estekhdamiRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tas_bas_group_estekhdamiDataTable = CType(MyBase.Clone,tas_bas_group_estekhdamiDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tas_bas_group_estekhdamiDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columndesc_group_estekhdami = Me.Columns("desc_group_estekhdami")
            Me.columncode_group_estekhdami = Me.Columns("code_group_estekhdami")
        End Sub
        
        Private Sub InitClass()
            Me.columndesc_group_estekhdami = New DataColumn("desc_group_estekhdami", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndesc_group_estekhdami)
            Me.columncode_group_estekhdami = New DataColumn("code_group_estekhdami", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_group_estekhdami)
            Me.Constraints.Add(New UniqueConstraint("Constraint1", New DataColumn() {Me.columncode_group_estekhdami}, true))
            Me.columndesc_group_estekhdami.AllowDBNull = false
            Me.columncode_group_estekhdami.AllowDBNull = false
            Me.columncode_group_estekhdami.Unique = true
        End Sub
        
        Public Function Newtas_bas_group_estekhdamiRow() As tas_bas_group_estekhdamiRow
            Return CType(Me.NewRow,tas_bas_group_estekhdamiRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tas_bas_group_estekhdamiRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tas_bas_group_estekhdamiRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tas_bas_group_estekhdamiRowChangedEvent) Is Nothing) Then
                RaiseEvent tas_bas_group_estekhdamiRowChanged(Me, New tas_bas_group_estekhdamiRowChangeEvent(CType(e.Row,tas_bas_group_estekhdamiRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tas_bas_group_estekhdamiRowChangingEvent) Is Nothing) Then
                RaiseEvent tas_bas_group_estekhdamiRowChanging(Me, New tas_bas_group_estekhdamiRowChangeEvent(CType(e.Row,tas_bas_group_estekhdamiRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tas_bas_group_estekhdamiRowDeletedEvent) Is Nothing) Then
                RaiseEvent tas_bas_group_estekhdamiRowDeleted(Me, New tas_bas_group_estekhdamiRowChangeEvent(CType(e.Row,tas_bas_group_estekhdamiRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tas_bas_group_estekhdamiRowDeletingEvent) Is Nothing) Then
                RaiseEvent tas_bas_group_estekhdamiRowDeleting(Me, New tas_bas_group_estekhdamiRowChangeEvent(CType(e.Row,tas_bas_group_estekhdamiRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetas_bas_group_estekhdamiRow(ByVal row As tas_bas_group_estekhdamiRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_group_estekhdamiRow
        Inherits DataRow
        
        Private tabletas_bas_group_estekhdami As tas_bas_group_estekhdamiDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletas_bas_group_estekhdami = CType(Me.Table,tas_bas_group_estekhdamiDataTable)
        End Sub
        
        Public Property desc_group_estekhdami As String
            Get
                Return CType(Me(Me.tabletas_bas_group_estekhdami.desc_group_estekhdamiColumn),String)
            End Get
            Set
                Me(Me.tabletas_bas_group_estekhdami.desc_group_estekhdamiColumn) = value
            End Set
        End Property
        
        Public Property code_group_estekhdami As String
            Get
                Return CType(Me(Me.tabletas_bas_group_estekhdami.code_group_estekhdamiColumn),String)
            End Get
            Set
                Me(Me.tabletas_bas_group_estekhdami.code_group_estekhdamiColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_group_estekhdamiRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tas_bas_group_estekhdamiRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tas_bas_group_estekhdamiRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tas_bas_group_estekhdamiRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
