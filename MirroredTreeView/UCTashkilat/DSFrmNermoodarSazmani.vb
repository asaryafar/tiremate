'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class DSFrmNermoodarSazmani
    Inherits DataSet
    
    Private tabletas_bas_vahed As tas_bas_vahedDataTable
    
    Private tabletas_bas_tashkilat As tas_bas_tashkilatDataTable
    
    Private tabletas_bas_radeh_sazemani As tas_bas_radeh_sazemaniDataTable
    
    Private tabletas_tr_vahedha_mashaghel As tas_tr_vahedha_mashaghelDataTable
    
    Private tabletas_tr_takhsis_postsazemani As tas_tr_takhsis_postsazemaniDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tas_bas_vahed")) Is Nothing) Then
                Me.Tables.Add(New tas_bas_vahedDataTable(ds.Tables("tas_bas_vahed")))
            End If
            If (Not (ds.Tables("tas_bas_tashkilat")) Is Nothing) Then
                Me.Tables.Add(New tas_bas_tashkilatDataTable(ds.Tables("tas_bas_tashkilat")))
            End If
            If (Not (ds.Tables("tas_bas_radeh_sazemani")) Is Nothing) Then
                Me.Tables.Add(New tas_bas_radeh_sazemaniDataTable(ds.Tables("tas_bas_radeh_sazemani")))
            End If
            If (Not (ds.Tables("tas_tr_vahedha_mashaghel")) Is Nothing) Then
                Me.Tables.Add(New tas_tr_vahedha_mashaghelDataTable(ds.Tables("tas_tr_vahedha_mashaghel")))
            End If
            If (Not (ds.Tables("tas_tr_takhsis_postsazemani")) Is Nothing) Then
                Me.Tables.Add(New tas_tr_takhsis_postsazemaniDataTable(ds.Tables("tas_tr_takhsis_postsazemani")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tas_bas_vahed As tas_bas_vahedDataTable
        Get
            Return Me.tabletas_bas_vahed
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tas_bas_tashkilat As tas_bas_tashkilatDataTable
        Get
            Return Me.tabletas_bas_tashkilat
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tas_bas_radeh_sazemani As tas_bas_radeh_sazemaniDataTable
        Get
            Return Me.tabletas_bas_radeh_sazemani
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tas_tr_vahedha_mashaghel As tas_tr_vahedha_mashaghelDataTable
        Get
            Return Me.tabletas_tr_vahedha_mashaghel
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tas_tr_takhsis_postsazemani As tas_tr_takhsis_postsazemaniDataTable
        Get
            Return Me.tabletas_tr_takhsis_postsazemani
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As DSFrmNermoodarSazmani = CType(MyBase.Clone,DSFrmNermoodarSazmani)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("tas_bas_vahed")) Is Nothing) Then
            Me.Tables.Add(New tas_bas_vahedDataTable(ds.Tables("tas_bas_vahed")))
        End If
        If (Not (ds.Tables("tas_bas_tashkilat")) Is Nothing) Then
            Me.Tables.Add(New tas_bas_tashkilatDataTable(ds.Tables("tas_bas_tashkilat")))
        End If
        If (Not (ds.Tables("tas_bas_radeh_sazemani")) Is Nothing) Then
            Me.Tables.Add(New tas_bas_radeh_sazemaniDataTable(ds.Tables("tas_bas_radeh_sazemani")))
        End If
        If (Not (ds.Tables("tas_tr_vahedha_mashaghel")) Is Nothing) Then
            Me.Tables.Add(New tas_tr_vahedha_mashaghelDataTable(ds.Tables("tas_tr_vahedha_mashaghel")))
        End If
        If (Not (ds.Tables("tas_tr_takhsis_postsazemani")) Is Nothing) Then
            Me.Tables.Add(New tas_tr_takhsis_postsazemaniDataTable(ds.Tables("tas_tr_takhsis_postsazemani")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tabletas_bas_vahed = CType(Me.Tables("tas_bas_vahed"),tas_bas_vahedDataTable)
        If (Not (Me.tabletas_bas_vahed) Is Nothing) Then
            Me.tabletas_bas_vahed.InitVars
        End If
        Me.tabletas_bas_tashkilat = CType(Me.Tables("tas_bas_tashkilat"),tas_bas_tashkilatDataTable)
        If (Not (Me.tabletas_bas_tashkilat) Is Nothing) Then
            Me.tabletas_bas_tashkilat.InitVars
        End If
        Me.tabletas_bas_radeh_sazemani = CType(Me.Tables("tas_bas_radeh_sazemani"),tas_bas_radeh_sazemaniDataTable)
        If (Not (Me.tabletas_bas_radeh_sazemani) Is Nothing) Then
            Me.tabletas_bas_radeh_sazemani.InitVars
        End If
        Me.tabletas_tr_vahedha_mashaghel = CType(Me.Tables("tas_tr_vahedha_mashaghel"),tas_tr_vahedha_mashaghelDataTable)
        If (Not (Me.tabletas_tr_vahedha_mashaghel) Is Nothing) Then
            Me.tabletas_tr_vahedha_mashaghel.InitVars
        End If
        Me.tabletas_tr_takhsis_postsazemani = CType(Me.Tables("tas_tr_takhsis_postsazemani"),tas_tr_takhsis_postsazemaniDataTable)
        If (Not (Me.tabletas_tr_takhsis_postsazemani) Is Nothing) Then
            Me.tabletas_tr_takhsis_postsazemani.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "DSFrmNermoodarSazmani"
        Me.Prefix = ""
        Me.Namespace = "http://www.tempuri.org/DSFrmNermoodarSazmani.xsd"
        Me.Locale = New System.Globalization.CultureInfo("fa-IR")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tabletas_bas_vahed = New tas_bas_vahedDataTable
        Me.Tables.Add(Me.tabletas_bas_vahed)
        Me.tabletas_bas_tashkilat = New tas_bas_tashkilatDataTable
        Me.Tables.Add(Me.tabletas_bas_tashkilat)
        Me.tabletas_bas_radeh_sazemani = New tas_bas_radeh_sazemaniDataTable
        Me.Tables.Add(Me.tabletas_bas_radeh_sazemani)
        Me.tabletas_tr_vahedha_mashaghel = New tas_tr_vahedha_mashaghelDataTable
        Me.Tables.Add(Me.tabletas_tr_vahedha_mashaghel)
        Me.tabletas_tr_takhsis_postsazemani = New tas_tr_takhsis_postsazemaniDataTable
        Me.Tables.Add(Me.tabletas_tr_takhsis_postsazemani)
    End Sub
    
    Private Function ShouldSerializetas_bas_vahed() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetas_bas_tashkilat() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetas_bas_radeh_sazemani() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetas_tr_vahedha_mashaghel() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializetas_tr_takhsis_postsazemani() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub tas_bas_vahedRowChangeEventHandler(ByVal sender As Object, ByVal e As tas_bas_vahedRowChangeEvent)
    
    Public Delegate Sub tas_bas_tashkilatRowChangeEventHandler(ByVal sender As Object, ByVal e As tas_bas_tashkilatRowChangeEvent)
    
    Public Delegate Sub tas_bas_radeh_sazemaniRowChangeEventHandler(ByVal sender As Object, ByVal e As tas_bas_radeh_sazemaniRowChangeEvent)
    
    Public Delegate Sub tas_tr_vahedha_mashaghelRowChangeEventHandler(ByVal sender As Object, ByVal e As tas_tr_vahedha_mashaghelRowChangeEvent)
    
    Public Delegate Sub tas_tr_takhsis_postsazemaniRowChangeEventHandler(ByVal sender As Object, ByVal e As tas_tr_takhsis_postsazemaniRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_vahedDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnid_vahed As DataColumn
        
        Private columncode_tashkilat As DataColumn
        
        Private columndesc_vahed As DataColumn
        
        Private columncode_master As DataColumn
        
        Private columncode_radeh_sazemani As DataColumn
        
        Private columnmahal_vahed As DataColumn
        
        Private columntel As DataColumn
        
        Private columnremark As DataColumn
        
        Private columnpicture As DataColumn
        
        Private columncode_bandar As DataColumn
        
        Friend Sub New()
            MyBase.New("tas_bas_vahed")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property id_vahedColumn As DataColumn
            Get
                Return Me.columnid_vahed
            End Get
        End Property
        
        Friend ReadOnly Property code_tashkilatColumn As DataColumn
            Get
                Return Me.columncode_tashkilat
            End Get
        End Property
        
        Friend ReadOnly Property desc_vahedColumn As DataColumn
            Get
                Return Me.columndesc_vahed
            End Get
        End Property
        
        Friend ReadOnly Property code_masterColumn As DataColumn
            Get
                Return Me.columncode_master
            End Get
        End Property
        
        Friend ReadOnly Property code_radeh_sazemaniColumn As DataColumn
            Get
                Return Me.columncode_radeh_sazemani
            End Get
        End Property
        
        Friend ReadOnly Property mahal_vahedColumn As DataColumn
            Get
                Return Me.columnmahal_vahed
            End Get
        End Property
        
        Friend ReadOnly Property telColumn As DataColumn
            Get
                Return Me.columntel
            End Get
        End Property
        
        Friend ReadOnly Property remarkColumn As DataColumn
            Get
                Return Me.columnremark
            End Get
        End Property
        
        Friend ReadOnly Property pictureColumn As DataColumn
            Get
                Return Me.columnpicture
            End Get
        End Property
        
        Friend ReadOnly Property code_bandarColumn As DataColumn
            Get
                Return Me.columncode_bandar
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tas_bas_vahedRow
            Get
                Return CType(Me.Rows(index),tas_bas_vahedRow)
            End Get
        End Property
        
        Public Event tas_bas_vahedRowChanged As tas_bas_vahedRowChangeEventHandler
        
        Public Event tas_bas_vahedRowChanging As tas_bas_vahedRowChangeEventHandler
        
        Public Event tas_bas_vahedRowDeleted As tas_bas_vahedRowChangeEventHandler
        
        Public Event tas_bas_vahedRowDeleting As tas_bas_vahedRowChangeEventHandler
        
        Public Overloads Sub Addtas_bas_vahedRow(ByVal row As tas_bas_vahedRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtas_bas_vahedRow(ByVal code_tashkilat As Short, ByVal desc_vahed As String, ByVal code_master As Short, ByVal code_radeh_sazemani As Short, ByVal mahal_vahed As String, ByVal tel As String, ByVal remark As String, ByVal picture() As Byte, ByVal code_bandar As String) As tas_bas_vahedRow
            Dim rowtas_bas_vahedRow As tas_bas_vahedRow = CType(Me.NewRow,tas_bas_vahedRow)
            rowtas_bas_vahedRow.ItemArray = New Object() {Nothing, code_tashkilat, desc_vahed, code_master, code_radeh_sazemani, mahal_vahed, tel, remark, picture, code_bandar}
            Me.Rows.Add(rowtas_bas_vahedRow)
            Return rowtas_bas_vahedRow
        End Function
        
        Public Function FindByid_vahed(ByVal id_vahed As Short) As tas_bas_vahedRow
            Return CType(Me.Rows.Find(New Object() {id_vahed}),tas_bas_vahedRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tas_bas_vahedDataTable = CType(MyBase.Clone,tas_bas_vahedDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tas_bas_vahedDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnid_vahed = Me.Columns("id_vahed")
            Me.columncode_tashkilat = Me.Columns("code_tashkilat")
            Me.columndesc_vahed = Me.Columns("desc_vahed")
            Me.columncode_master = Me.Columns("code_master")
            Me.columncode_radeh_sazemani = Me.Columns("code_radeh_sazemani")
            Me.columnmahal_vahed = Me.Columns("mahal_vahed")
            Me.columntel = Me.Columns("tel")
            Me.columnremark = Me.Columns("remark")
            Me.columnpicture = Me.Columns("picture")
            Me.columncode_bandar = Me.Columns("code_bandar")
        End Sub
        
        Private Sub InitClass()
            Me.columnid_vahed = New DataColumn("id_vahed", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnid_vahed)
            Me.columncode_tashkilat = New DataColumn("code_tashkilat", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_tashkilat)
            Me.columndesc_vahed = New DataColumn("desc_vahed", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndesc_vahed)
            Me.columncode_master = New DataColumn("code_master", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_master)
            Me.columncode_radeh_sazemani = New DataColumn("code_radeh_sazemani", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_radeh_sazemani)
            Me.columnmahal_vahed = New DataColumn("mahal_vahed", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmahal_vahed)
            Me.columntel = New DataColumn("tel", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columntel)
            Me.columnremark = New DataColumn("remark", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnremark)
            Me.columnpicture = New DataColumn("picture", GetType(System.Byte()), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnpicture)
            Me.columncode_bandar = New DataColumn("code_bandar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_bandar)
            Me.Constraints.Add(New UniqueConstraint("Constraint1", New DataColumn() {Me.columnid_vahed}, true))
            Me.columnid_vahed.AutoIncrement = true
            Me.columnid_vahed.AllowDBNull = false
            Me.columnid_vahed.ReadOnly = true
            Me.columnid_vahed.Unique = true
            Me.columncode_tashkilat.AllowDBNull = false
            Me.columndesc_vahed.AllowDBNull = false
            Me.columncode_radeh_sazemani.AllowDBNull = false
            Me.columncode_bandar.AllowDBNull = false
        End Sub
        
        Public Function Newtas_bas_vahedRow() As tas_bas_vahedRow
            Return CType(Me.NewRow,tas_bas_vahedRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tas_bas_vahedRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tas_bas_vahedRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tas_bas_vahedRowChangedEvent) Is Nothing) Then
                RaiseEvent tas_bas_vahedRowChanged(Me, New tas_bas_vahedRowChangeEvent(CType(e.Row,tas_bas_vahedRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tas_bas_vahedRowChangingEvent) Is Nothing) Then
                RaiseEvent tas_bas_vahedRowChanging(Me, New tas_bas_vahedRowChangeEvent(CType(e.Row,tas_bas_vahedRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tas_bas_vahedRowDeletedEvent) Is Nothing) Then
                RaiseEvent tas_bas_vahedRowDeleted(Me, New tas_bas_vahedRowChangeEvent(CType(e.Row,tas_bas_vahedRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tas_bas_vahedRowDeletingEvent) Is Nothing) Then
                RaiseEvent tas_bas_vahedRowDeleting(Me, New tas_bas_vahedRowChangeEvent(CType(e.Row,tas_bas_vahedRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetas_bas_vahedRow(ByVal row As tas_bas_vahedRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_vahedRow
        Inherits DataRow
        
        Private tabletas_bas_vahed As tas_bas_vahedDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletas_bas_vahed = CType(Me.Table,tas_bas_vahedDataTable)
        End Sub
        
        Public Property id_vahed As Short
            Get
                Return CType(Me(Me.tabletas_bas_vahed.id_vahedColumn),Short)
            End Get
            Set
                Me(Me.tabletas_bas_vahed.id_vahedColumn) = value
            End Set
        End Property
        
        Public Property code_tashkilat As Short
            Get
                Return CType(Me(Me.tabletas_bas_vahed.code_tashkilatColumn),Short)
            End Get
            Set
                Me(Me.tabletas_bas_vahed.code_tashkilatColumn) = value
            End Set
        End Property
        
        Public Property desc_vahed As String
            Get
                Return CType(Me(Me.tabletas_bas_vahed.desc_vahedColumn),String)
            End Get
            Set
                Me(Me.tabletas_bas_vahed.desc_vahedColumn) = value
            End Set
        End Property
        
        Public Property code_master As Short
            Get
                Try 
                    Return CType(Me(Me.tabletas_bas_vahed.code_masterColumn),Short)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_bas_vahed.code_masterColumn) = value
            End Set
        End Property
        
        Public Property code_radeh_sazemani As Short
            Get
                Return CType(Me(Me.tabletas_bas_vahed.code_radeh_sazemaniColumn),Short)
            End Get
            Set
                Me(Me.tabletas_bas_vahed.code_radeh_sazemaniColumn) = value
            End Set
        End Property
        
        Public Property mahal_vahed As String
            Get
                Try 
                    Return CType(Me(Me.tabletas_bas_vahed.mahal_vahedColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_bas_vahed.mahal_vahedColumn) = value
            End Set
        End Property
        
        Public Property tel As String
            Get
                Try 
                    Return CType(Me(Me.tabletas_bas_vahed.telColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_bas_vahed.telColumn) = value
            End Set
        End Property
        
        Public Property remark As String
            Get
                Try 
                    Return CType(Me(Me.tabletas_bas_vahed.remarkColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_bas_vahed.remarkColumn) = value
            End Set
        End Property
        
        Public Property picture As Byte()
            Get
                Try 
                    Return CType(Me(Me.tabletas_bas_vahed.pictureColumn),Byte())
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_bas_vahed.pictureColumn) = value
            End Set
        End Property
        
        Public Property code_bandar As String
            Get
                Return CType(Me(Me.tabletas_bas_vahed.code_bandarColumn),String)
            End Get
            Set
                Me(Me.tabletas_bas_vahed.code_bandarColumn) = value
            End Set
        End Property
        
        Public Function Iscode_masterNull() As Boolean
            Return Me.IsNull(Me.tabletas_bas_vahed.code_masterColumn)
        End Function
        
        Public Sub Setcode_masterNull()
            Me(Me.tabletas_bas_vahed.code_masterColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Ismahal_vahedNull() As Boolean
            Return Me.IsNull(Me.tabletas_bas_vahed.mahal_vahedColumn)
        End Function
        
        Public Sub Setmahal_vahedNull()
            Me(Me.tabletas_bas_vahed.mahal_vahedColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IstelNull() As Boolean
            Return Me.IsNull(Me.tabletas_bas_vahed.telColumn)
        End Function
        
        Public Sub SettelNull()
            Me(Me.tabletas_bas_vahed.telColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsremarkNull() As Boolean
            Return Me.IsNull(Me.tabletas_bas_vahed.remarkColumn)
        End Function
        
        Public Sub SetremarkNull()
            Me(Me.tabletas_bas_vahed.remarkColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IspictureNull() As Boolean
            Return Me.IsNull(Me.tabletas_bas_vahed.pictureColumn)
        End Function
        
        Public Sub SetpictureNull()
            Me(Me.tabletas_bas_vahed.pictureColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_vahedRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tas_bas_vahedRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tas_bas_vahedRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tas_bas_vahedRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_tashkilatDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columncode_tashkilat As DataColumn
        
        Private columndesc_tashkilat As DataColumn
        
        Friend Sub New()
            MyBase.New("tas_bas_tashkilat")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property code_tashkilatColumn As DataColumn
            Get
                Return Me.columncode_tashkilat
            End Get
        End Property
        
        Friend ReadOnly Property desc_tashkilatColumn As DataColumn
            Get
                Return Me.columndesc_tashkilat
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tas_bas_tashkilatRow
            Get
                Return CType(Me.Rows(index),tas_bas_tashkilatRow)
            End Get
        End Property
        
        Public Event tas_bas_tashkilatRowChanged As tas_bas_tashkilatRowChangeEventHandler
        
        Public Event tas_bas_tashkilatRowChanging As tas_bas_tashkilatRowChangeEventHandler
        
        Public Event tas_bas_tashkilatRowDeleted As tas_bas_tashkilatRowChangeEventHandler
        
        Public Event tas_bas_tashkilatRowDeleting As tas_bas_tashkilatRowChangeEventHandler
        
        Public Overloads Sub Addtas_bas_tashkilatRow(ByVal row As tas_bas_tashkilatRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtas_bas_tashkilatRow(ByVal desc_tashkilat As String) As tas_bas_tashkilatRow
            Dim rowtas_bas_tashkilatRow As tas_bas_tashkilatRow = CType(Me.NewRow,tas_bas_tashkilatRow)
            rowtas_bas_tashkilatRow.ItemArray = New Object() {Nothing, desc_tashkilat}
            Me.Rows.Add(rowtas_bas_tashkilatRow)
            Return rowtas_bas_tashkilatRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tas_bas_tashkilatDataTable = CType(MyBase.Clone,tas_bas_tashkilatDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tas_bas_tashkilatDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columncode_tashkilat = Me.Columns("code_tashkilat")
            Me.columndesc_tashkilat = Me.Columns("desc_tashkilat")
        End Sub
        
        Private Sub InitClass()
            Me.columncode_tashkilat = New DataColumn("code_tashkilat", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_tashkilat)
            Me.columndesc_tashkilat = New DataColumn("desc_tashkilat", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndesc_tashkilat)
            Me.columncode_tashkilat.AutoIncrement = true
            Me.columncode_tashkilat.AllowDBNull = false
            Me.columncode_tashkilat.ReadOnly = true
            Me.columndesc_tashkilat.AllowDBNull = false
        End Sub
        
        Public Function Newtas_bas_tashkilatRow() As tas_bas_tashkilatRow
            Return CType(Me.NewRow,tas_bas_tashkilatRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tas_bas_tashkilatRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tas_bas_tashkilatRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tas_bas_tashkilatRowChangedEvent) Is Nothing) Then
                RaiseEvent tas_bas_tashkilatRowChanged(Me, New tas_bas_tashkilatRowChangeEvent(CType(e.Row,tas_bas_tashkilatRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tas_bas_tashkilatRowChangingEvent) Is Nothing) Then
                RaiseEvent tas_bas_tashkilatRowChanging(Me, New tas_bas_tashkilatRowChangeEvent(CType(e.Row,tas_bas_tashkilatRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tas_bas_tashkilatRowDeletedEvent) Is Nothing) Then
                RaiseEvent tas_bas_tashkilatRowDeleted(Me, New tas_bas_tashkilatRowChangeEvent(CType(e.Row,tas_bas_tashkilatRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tas_bas_tashkilatRowDeletingEvent) Is Nothing) Then
                RaiseEvent tas_bas_tashkilatRowDeleting(Me, New tas_bas_tashkilatRowChangeEvent(CType(e.Row,tas_bas_tashkilatRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetas_bas_tashkilatRow(ByVal row As tas_bas_tashkilatRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_tashkilatRow
        Inherits DataRow
        
        Private tabletas_bas_tashkilat As tas_bas_tashkilatDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletas_bas_tashkilat = CType(Me.Table,tas_bas_tashkilatDataTable)
        End Sub
        
        Public Property code_tashkilat As Integer
            Get
                Return CType(Me(Me.tabletas_bas_tashkilat.code_tashkilatColumn),Integer)
            End Get
            Set
                Me(Me.tabletas_bas_tashkilat.code_tashkilatColumn) = value
            End Set
        End Property
        
        Public Property desc_tashkilat As String
            Get
                Return CType(Me(Me.tabletas_bas_tashkilat.desc_tashkilatColumn),String)
            End Get
            Set
                Me(Me.tabletas_bas_tashkilat.desc_tashkilatColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_tashkilatRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tas_bas_tashkilatRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tas_bas_tashkilatRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tas_bas_tashkilatRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_radeh_sazemaniDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columncode_radeh_sazemani As DataColumn
        
        Private columndesc_radeh_sazemani As DataColumn
        
        Friend Sub New()
            MyBase.New("tas_bas_radeh_sazemani")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property code_radeh_sazemaniColumn As DataColumn
            Get
                Return Me.columncode_radeh_sazemani
            End Get
        End Property
        
        Friend ReadOnly Property desc_radeh_sazemaniColumn As DataColumn
            Get
                Return Me.columndesc_radeh_sazemani
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tas_bas_radeh_sazemaniRow
            Get
                Return CType(Me.Rows(index),tas_bas_radeh_sazemaniRow)
            End Get
        End Property
        
        Public Event tas_bas_radeh_sazemaniRowChanged As tas_bas_radeh_sazemaniRowChangeEventHandler
        
        Public Event tas_bas_radeh_sazemaniRowChanging As tas_bas_radeh_sazemaniRowChangeEventHandler
        
        Public Event tas_bas_radeh_sazemaniRowDeleted As tas_bas_radeh_sazemaniRowChangeEventHandler
        
        Public Event tas_bas_radeh_sazemaniRowDeleting As tas_bas_radeh_sazemaniRowChangeEventHandler
        
        Public Overloads Sub Addtas_bas_radeh_sazemaniRow(ByVal row As tas_bas_radeh_sazemaniRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtas_bas_radeh_sazemaniRow(ByVal desc_radeh_sazemani As String) As tas_bas_radeh_sazemaniRow
            Dim rowtas_bas_radeh_sazemaniRow As tas_bas_radeh_sazemaniRow = CType(Me.NewRow,tas_bas_radeh_sazemaniRow)
            rowtas_bas_radeh_sazemaniRow.ItemArray = New Object() {Nothing, desc_radeh_sazemani}
            Me.Rows.Add(rowtas_bas_radeh_sazemaniRow)
            Return rowtas_bas_radeh_sazemaniRow
        End Function
        
        Public Function FindBycode_radeh_sazemani(ByVal code_radeh_sazemani As Short) As tas_bas_radeh_sazemaniRow
            Return CType(Me.Rows.Find(New Object() {code_radeh_sazemani}),tas_bas_radeh_sazemaniRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tas_bas_radeh_sazemaniDataTable = CType(MyBase.Clone,tas_bas_radeh_sazemaniDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tas_bas_radeh_sazemaniDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columncode_radeh_sazemani = Me.Columns("code_radeh_sazemani")
            Me.columndesc_radeh_sazemani = Me.Columns("desc_radeh_sazemani")
        End Sub
        
        Private Sub InitClass()
            Me.columncode_radeh_sazemani = New DataColumn("code_radeh_sazemani", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_radeh_sazemani)
            Me.columndesc_radeh_sazemani = New DataColumn("desc_radeh_sazemani", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndesc_radeh_sazemani)
            Me.Constraints.Add(New UniqueConstraint("Constraint1", New DataColumn() {Me.columncode_radeh_sazemani}, true))
            Me.columncode_radeh_sazemani.AutoIncrement = true
            Me.columncode_radeh_sazemani.AllowDBNull = false
            Me.columncode_radeh_sazemani.ReadOnly = true
            Me.columncode_radeh_sazemani.Unique = true
            Me.columndesc_radeh_sazemani.AllowDBNull = false
        End Sub
        
        Public Function Newtas_bas_radeh_sazemaniRow() As tas_bas_radeh_sazemaniRow
            Return CType(Me.NewRow,tas_bas_radeh_sazemaniRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tas_bas_radeh_sazemaniRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tas_bas_radeh_sazemaniRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tas_bas_radeh_sazemaniRowChangedEvent) Is Nothing) Then
                RaiseEvent tas_bas_radeh_sazemaniRowChanged(Me, New tas_bas_radeh_sazemaniRowChangeEvent(CType(e.Row,tas_bas_radeh_sazemaniRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tas_bas_radeh_sazemaniRowChangingEvent) Is Nothing) Then
                RaiseEvent tas_bas_radeh_sazemaniRowChanging(Me, New tas_bas_radeh_sazemaniRowChangeEvent(CType(e.Row,tas_bas_radeh_sazemaniRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tas_bas_radeh_sazemaniRowDeletedEvent) Is Nothing) Then
                RaiseEvent tas_bas_radeh_sazemaniRowDeleted(Me, New tas_bas_radeh_sazemaniRowChangeEvent(CType(e.Row,tas_bas_radeh_sazemaniRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tas_bas_radeh_sazemaniRowDeletingEvent) Is Nothing) Then
                RaiseEvent tas_bas_radeh_sazemaniRowDeleting(Me, New tas_bas_radeh_sazemaniRowChangeEvent(CType(e.Row,tas_bas_radeh_sazemaniRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetas_bas_radeh_sazemaniRow(ByVal row As tas_bas_radeh_sazemaniRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_radeh_sazemaniRow
        Inherits DataRow
        
        Private tabletas_bas_radeh_sazemani As tas_bas_radeh_sazemaniDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletas_bas_radeh_sazemani = CType(Me.Table,tas_bas_radeh_sazemaniDataTable)
        End Sub
        
        Public Property code_radeh_sazemani As Short
            Get
                Return CType(Me(Me.tabletas_bas_radeh_sazemani.code_radeh_sazemaniColumn),Short)
            End Get
            Set
                Me(Me.tabletas_bas_radeh_sazemani.code_radeh_sazemaniColumn) = value
            End Set
        End Property
        
        Public Property desc_radeh_sazemani As String
            Get
                Return CType(Me(Me.tabletas_bas_radeh_sazemani.desc_radeh_sazemaniColumn),String)
            End Get
            Set
                Me(Me.tabletas_bas_radeh_sazemani.desc_radeh_sazemaniColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_bas_radeh_sazemaniRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tas_bas_radeh_sazemaniRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tas_bas_radeh_sazemaniRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tas_bas_radeh_sazemaniRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_tr_vahedha_mashaghelDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columncode_post_sazemani As DataColumn
        
        Private columnsomareh_post_sazemani As DataColumn
        
        Private columndesc_post_sazemani As DataColumn
        
        Private columnid_vahed As DataColumn
        
        Private columncode_reshteh_shoghli As DataColumn
        
        Private columnshrah_vazaef As DataColumn
        
        Private columnactivate As DataColumn
        
        Private columnremark As DataColumn
        
        Private columncode_bandar As DataColumn
        
        Friend Sub New()
            MyBase.New("tas_tr_vahedha_mashaghel")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property code_post_sazemaniColumn As DataColumn
            Get
                Return Me.columncode_post_sazemani
            End Get
        End Property
        
        Friend ReadOnly Property somareh_post_sazemaniColumn As DataColumn
            Get
                Return Me.columnsomareh_post_sazemani
            End Get
        End Property
        
        Friend ReadOnly Property desc_post_sazemaniColumn As DataColumn
            Get
                Return Me.columndesc_post_sazemani
            End Get
        End Property
        
        Friend ReadOnly Property id_vahedColumn As DataColumn
            Get
                Return Me.columnid_vahed
            End Get
        End Property
        
        Friend ReadOnly Property code_reshteh_shoghliColumn As DataColumn
            Get
                Return Me.columncode_reshteh_shoghli
            End Get
        End Property
        
        Friend ReadOnly Property shrah_vazaefColumn As DataColumn
            Get
                Return Me.columnshrah_vazaef
            End Get
        End Property
        
        Friend ReadOnly Property activateColumn As DataColumn
            Get
                Return Me.columnactivate
            End Get
        End Property
        
        Friend ReadOnly Property remarkColumn As DataColumn
            Get
                Return Me.columnremark
            End Get
        End Property
        
        Friend ReadOnly Property code_bandarColumn As DataColumn
            Get
                Return Me.columncode_bandar
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tas_tr_vahedha_mashaghelRow
            Get
                Return CType(Me.Rows(index),tas_tr_vahedha_mashaghelRow)
            End Get
        End Property
        
        Public Event tas_tr_vahedha_mashaghelRowChanged As tas_tr_vahedha_mashaghelRowChangeEventHandler
        
        Public Event tas_tr_vahedha_mashaghelRowChanging As tas_tr_vahedha_mashaghelRowChangeEventHandler
        
        Public Event tas_tr_vahedha_mashaghelRowDeleted As tas_tr_vahedha_mashaghelRowChangeEventHandler
        
        Public Event tas_tr_vahedha_mashaghelRowDeleting As tas_tr_vahedha_mashaghelRowChangeEventHandler
        
        Public Overloads Sub Addtas_tr_vahedha_mashaghelRow(ByVal row As tas_tr_vahedha_mashaghelRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtas_tr_vahedha_mashaghelRow(ByVal somareh_post_sazemani As String, ByVal desc_post_sazemani As String, ByVal id_vahed As Short, ByVal code_reshteh_shoghli As Short, ByVal shrah_vazaef As String, ByVal activate As Boolean, ByVal remark As String, ByVal code_bandar As String) As tas_tr_vahedha_mashaghelRow
            Dim rowtas_tr_vahedha_mashaghelRow As tas_tr_vahedha_mashaghelRow = CType(Me.NewRow,tas_tr_vahedha_mashaghelRow)
            rowtas_tr_vahedha_mashaghelRow.ItemArray = New Object() {Nothing, somareh_post_sazemani, desc_post_sazemani, id_vahed, code_reshteh_shoghli, shrah_vazaef, activate, remark, code_bandar}
            Me.Rows.Add(rowtas_tr_vahedha_mashaghelRow)
            Return rowtas_tr_vahedha_mashaghelRow
        End Function
        
        Public Function FindBycode_post_sazemani(ByVal code_post_sazemani As Short) As tas_tr_vahedha_mashaghelRow
            Return CType(Me.Rows.Find(New Object() {code_post_sazemani}),tas_tr_vahedha_mashaghelRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tas_tr_vahedha_mashaghelDataTable = CType(MyBase.Clone,tas_tr_vahedha_mashaghelDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tas_tr_vahedha_mashaghelDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columncode_post_sazemani = Me.Columns("code_post_sazemani")
            Me.columnsomareh_post_sazemani = Me.Columns("somareh_post_sazemani")
            Me.columndesc_post_sazemani = Me.Columns("desc_post_sazemani")
            Me.columnid_vahed = Me.Columns("id_vahed")
            Me.columncode_reshteh_shoghli = Me.Columns("code_reshteh_shoghli")
            Me.columnshrah_vazaef = Me.Columns("shrah_vazaef")
            Me.columnactivate = Me.Columns("activate")
            Me.columnremark = Me.Columns("remark")
            Me.columncode_bandar = Me.Columns("code_bandar")
        End Sub
        
        Private Sub InitClass()
            Me.columncode_post_sazemani = New DataColumn("code_post_sazemani", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_post_sazemani)
            Me.columnsomareh_post_sazemani = New DataColumn("somareh_post_sazemani", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnsomareh_post_sazemani)
            Me.columndesc_post_sazemani = New DataColumn("desc_post_sazemani", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndesc_post_sazemani)
            Me.columnid_vahed = New DataColumn("id_vahed", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnid_vahed)
            Me.columncode_reshteh_shoghli = New DataColumn("code_reshteh_shoghli", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_reshteh_shoghli)
            Me.columnshrah_vazaef = New DataColumn("shrah_vazaef", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnshrah_vazaef)
            Me.columnactivate = New DataColumn("activate", GetType(System.Boolean), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnactivate)
            Me.columnremark = New DataColumn("remark", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnremark)
            Me.columncode_bandar = New DataColumn("code_bandar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_bandar)
            Me.Constraints.Add(New UniqueConstraint("Constraint1", New DataColumn() {Me.columncode_post_sazemani}, true))
            Me.columncode_post_sazemani.AutoIncrement = true
            Me.columncode_post_sazemani.AllowDBNull = false
            Me.columncode_post_sazemani.ReadOnly = true
            Me.columncode_post_sazemani.Unique = true
            Me.columnsomareh_post_sazemani.AllowDBNull = false
            Me.columndesc_post_sazemani.AllowDBNull = false
            Me.columnid_vahed.AllowDBNull = false
            Me.columncode_reshteh_shoghli.AllowDBNull = false
            Me.columnactivate.AllowDBNull = false
            Me.columncode_bandar.AllowDBNull = false
        End Sub
        
        Public Function Newtas_tr_vahedha_mashaghelRow() As tas_tr_vahedha_mashaghelRow
            Return CType(Me.NewRow,tas_tr_vahedha_mashaghelRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tas_tr_vahedha_mashaghelRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tas_tr_vahedha_mashaghelRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tas_tr_vahedha_mashaghelRowChangedEvent) Is Nothing) Then
                RaiseEvent tas_tr_vahedha_mashaghelRowChanged(Me, New tas_tr_vahedha_mashaghelRowChangeEvent(CType(e.Row,tas_tr_vahedha_mashaghelRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tas_tr_vahedha_mashaghelRowChangingEvent) Is Nothing) Then
                RaiseEvent tas_tr_vahedha_mashaghelRowChanging(Me, New tas_tr_vahedha_mashaghelRowChangeEvent(CType(e.Row,tas_tr_vahedha_mashaghelRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tas_tr_vahedha_mashaghelRowDeletedEvent) Is Nothing) Then
                RaiseEvent tas_tr_vahedha_mashaghelRowDeleted(Me, New tas_tr_vahedha_mashaghelRowChangeEvent(CType(e.Row,tas_tr_vahedha_mashaghelRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tas_tr_vahedha_mashaghelRowDeletingEvent) Is Nothing) Then
                RaiseEvent tas_tr_vahedha_mashaghelRowDeleting(Me, New tas_tr_vahedha_mashaghelRowChangeEvent(CType(e.Row,tas_tr_vahedha_mashaghelRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetas_tr_vahedha_mashaghelRow(ByVal row As tas_tr_vahedha_mashaghelRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_tr_vahedha_mashaghelRow
        Inherits DataRow
        
        Private tabletas_tr_vahedha_mashaghel As tas_tr_vahedha_mashaghelDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletas_tr_vahedha_mashaghel = CType(Me.Table,tas_tr_vahedha_mashaghelDataTable)
        End Sub
        
        Public Property code_post_sazemani As Short
            Get
                Return CType(Me(Me.tabletas_tr_vahedha_mashaghel.code_post_sazemaniColumn),Short)
            End Get
            Set
                Me(Me.tabletas_tr_vahedha_mashaghel.code_post_sazemaniColumn) = value
            End Set
        End Property
        
        Public Property somareh_post_sazemani As String
            Get
                Return CType(Me(Me.tabletas_tr_vahedha_mashaghel.somareh_post_sazemaniColumn),String)
            End Get
            Set
                Me(Me.tabletas_tr_vahedha_mashaghel.somareh_post_sazemaniColumn) = value
            End Set
        End Property
        
        Public Property desc_post_sazemani As String
            Get
                Return CType(Me(Me.tabletas_tr_vahedha_mashaghel.desc_post_sazemaniColumn),String)
            End Get
            Set
                Me(Me.tabletas_tr_vahedha_mashaghel.desc_post_sazemaniColumn) = value
            End Set
        End Property
        
        Public Property id_vahed As Short
            Get
                Return CType(Me(Me.tabletas_tr_vahedha_mashaghel.id_vahedColumn),Short)
            End Get
            Set
                Me(Me.tabletas_tr_vahedha_mashaghel.id_vahedColumn) = value
            End Set
        End Property
        
        Public Property code_reshteh_shoghli As Short
            Get
                Return CType(Me(Me.tabletas_tr_vahedha_mashaghel.code_reshteh_shoghliColumn),Short)
            End Get
            Set
                Me(Me.tabletas_tr_vahedha_mashaghel.code_reshteh_shoghliColumn) = value
            End Set
        End Property
        
        Public Property shrah_vazaef As String
            Get
                Try 
                    Return CType(Me(Me.tabletas_tr_vahedha_mashaghel.shrah_vazaefColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_tr_vahedha_mashaghel.shrah_vazaefColumn) = value
            End Set
        End Property
        
        Public Property activate As Boolean
            Get
                Return CType(Me(Me.tabletas_tr_vahedha_mashaghel.activateColumn),Boolean)
            End Get
            Set
                Me(Me.tabletas_tr_vahedha_mashaghel.activateColumn) = value
            End Set
        End Property
        
        Public Property remark As String
            Get
                Try 
                    Return CType(Me(Me.tabletas_tr_vahedha_mashaghel.remarkColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_tr_vahedha_mashaghel.remarkColumn) = value
            End Set
        End Property
        
        Public Property code_bandar As String
            Get
                Return CType(Me(Me.tabletas_tr_vahedha_mashaghel.code_bandarColumn),String)
            End Get
            Set
                Me(Me.tabletas_tr_vahedha_mashaghel.code_bandarColumn) = value
            End Set
        End Property
        
        Public Function Isshrah_vazaefNull() As Boolean
            Return Me.IsNull(Me.tabletas_tr_vahedha_mashaghel.shrah_vazaefColumn)
        End Function
        
        Public Sub Setshrah_vazaefNull()
            Me(Me.tabletas_tr_vahedha_mashaghel.shrah_vazaefColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsremarkNull() As Boolean
            Return Me.IsNull(Me.tabletas_tr_vahedha_mashaghel.remarkColumn)
        End Function
        
        Public Sub SetremarkNull()
            Me(Me.tabletas_tr_vahedha_mashaghel.remarkColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_tr_vahedha_mashaghelRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tas_tr_vahedha_mashaghelRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tas_tr_vahedha_mashaghelRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tas_tr_vahedha_mashaghelRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_tr_takhsis_postsazemaniDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnid_post As DataColumn
        
        Private columncode_post_sazemani As DataColumn
        
        Private columncode_personal_takhsis As DataColumn
        
        Private columncode_personal_eblagh As DataColumn
        
        Private columnactivate As DataColumn
        
        Private columndate_takhsis As DataColumn
        
        Private columndate_eblagh As DataColumn
        
        Private columnremark As DataColumn
        
        Private columncode_bandar As DataColumn
        
        Friend Sub New()
            MyBase.New("tas_tr_takhsis_postsazemani")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property id_postColumn As DataColumn
            Get
                Return Me.columnid_post
            End Get
        End Property
        
        Friend ReadOnly Property code_post_sazemaniColumn As DataColumn
            Get
                Return Me.columncode_post_sazemani
            End Get
        End Property
        
        Friend ReadOnly Property code_personal_takhsisColumn As DataColumn
            Get
                Return Me.columncode_personal_takhsis
            End Get
        End Property
        
        Friend ReadOnly Property code_personal_eblaghColumn As DataColumn
            Get
                Return Me.columncode_personal_eblagh
            End Get
        End Property
        
        Friend ReadOnly Property activateColumn As DataColumn
            Get
                Return Me.columnactivate
            End Get
        End Property
        
        Friend ReadOnly Property date_takhsisColumn As DataColumn
            Get
                Return Me.columndate_takhsis
            End Get
        End Property
        
        Friend ReadOnly Property date_eblaghColumn As DataColumn
            Get
                Return Me.columndate_eblagh
            End Get
        End Property
        
        Friend ReadOnly Property remarkColumn As DataColumn
            Get
                Return Me.columnremark
            End Get
        End Property
        
        Friend ReadOnly Property code_bandarColumn As DataColumn
            Get
                Return Me.columncode_bandar
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As tas_tr_takhsis_postsazemaniRow
            Get
                Return CType(Me.Rows(index),tas_tr_takhsis_postsazemaniRow)
            End Get
        End Property
        
        Public Event tas_tr_takhsis_postsazemaniRowChanged As tas_tr_takhsis_postsazemaniRowChangeEventHandler
        
        Public Event tas_tr_takhsis_postsazemaniRowChanging As tas_tr_takhsis_postsazemaniRowChangeEventHandler
        
        Public Event tas_tr_takhsis_postsazemaniRowDeleted As tas_tr_takhsis_postsazemaniRowChangeEventHandler
        
        Public Event tas_tr_takhsis_postsazemaniRowDeleting As tas_tr_takhsis_postsazemaniRowChangeEventHandler
        
        Public Overloads Sub Addtas_tr_takhsis_postsazemaniRow(ByVal row As tas_tr_takhsis_postsazemaniRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addtas_tr_takhsis_postsazemaniRow(ByVal code_post_sazemani As Short, ByVal code_personal_takhsis As String, ByVal code_personal_eblagh As String, ByVal activate As Boolean, ByVal date_takhsis As String, ByVal date_eblagh As String, ByVal remark As String, ByVal code_bandar As String) As tas_tr_takhsis_postsazemaniRow
            Dim rowtas_tr_takhsis_postsazemaniRow As tas_tr_takhsis_postsazemaniRow = CType(Me.NewRow,tas_tr_takhsis_postsazemaniRow)
            rowtas_tr_takhsis_postsazemaniRow.ItemArray = New Object() {Nothing, code_post_sazemani, code_personal_takhsis, code_personal_eblagh, activate, date_takhsis, date_eblagh, remark, code_bandar}
            Me.Rows.Add(rowtas_tr_takhsis_postsazemaniRow)
            Return rowtas_tr_takhsis_postsazemaniRow
        End Function
        
        Public Function FindByid_post(ByVal id_post As Short) As tas_tr_takhsis_postsazemaniRow
            Return CType(Me.Rows.Find(New Object() {id_post}),tas_tr_takhsis_postsazemaniRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As tas_tr_takhsis_postsazemaniDataTable = CType(MyBase.Clone,tas_tr_takhsis_postsazemaniDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New tas_tr_takhsis_postsazemaniDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnid_post = Me.Columns("id_post")
            Me.columncode_post_sazemani = Me.Columns("code_post_sazemani")
            Me.columncode_personal_takhsis = Me.Columns("code_personal_takhsis")
            Me.columncode_personal_eblagh = Me.Columns("code_personal_eblagh")
            Me.columnactivate = Me.Columns("activate")
            Me.columndate_takhsis = Me.Columns("date_takhsis")
            Me.columndate_eblagh = Me.Columns("date_eblagh")
            Me.columnremark = Me.Columns("remark")
            Me.columncode_bandar = Me.Columns("code_bandar")
        End Sub
        
        Private Sub InitClass()
            Me.columnid_post = New DataColumn("id_post", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnid_post)
            Me.columncode_post_sazemani = New DataColumn("code_post_sazemani", GetType(System.Int16), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_post_sazemani)
            Me.columncode_personal_takhsis = New DataColumn("code_personal_takhsis", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_personal_takhsis)
            Me.columncode_personal_eblagh = New DataColumn("code_personal_eblagh", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_personal_eblagh)
            Me.columnactivate = New DataColumn("activate", GetType(System.Boolean), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnactivate)
            Me.columndate_takhsis = New DataColumn("date_takhsis", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndate_takhsis)
            Me.columndate_eblagh = New DataColumn("date_eblagh", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columndate_eblagh)
            Me.columnremark = New DataColumn("remark", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnremark)
            Me.columncode_bandar = New DataColumn("code_bandar", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columncode_bandar)
            Me.Constraints.Add(New UniqueConstraint("Constraint1", New DataColumn() {Me.columnid_post}, true))
            Me.columnid_post.AutoIncrement = true
            Me.columnid_post.AllowDBNull = false
            Me.columnid_post.ReadOnly = true
            Me.columnid_post.Unique = true
            Me.columncode_bandar.AllowDBNull = false
        End Sub
        
        Public Function Newtas_tr_takhsis_postsazemaniRow() As tas_tr_takhsis_postsazemaniRow
            Return CType(Me.NewRow,tas_tr_takhsis_postsazemaniRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New tas_tr_takhsis_postsazemaniRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(tas_tr_takhsis_postsazemaniRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tas_tr_takhsis_postsazemaniRowChangedEvent) Is Nothing) Then
                RaiseEvent tas_tr_takhsis_postsazemaniRowChanged(Me, New tas_tr_takhsis_postsazemaniRowChangeEvent(CType(e.Row,tas_tr_takhsis_postsazemaniRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tas_tr_takhsis_postsazemaniRowChangingEvent) Is Nothing) Then
                RaiseEvent tas_tr_takhsis_postsazemaniRowChanging(Me, New tas_tr_takhsis_postsazemaniRowChangeEvent(CType(e.Row,tas_tr_takhsis_postsazemaniRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tas_tr_takhsis_postsazemaniRowDeletedEvent) Is Nothing) Then
                RaiseEvent tas_tr_takhsis_postsazemaniRowDeleted(Me, New tas_tr_takhsis_postsazemaniRowChangeEvent(CType(e.Row,tas_tr_takhsis_postsazemaniRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tas_tr_takhsis_postsazemaniRowDeletingEvent) Is Nothing) Then
                RaiseEvent tas_tr_takhsis_postsazemaniRowDeleting(Me, New tas_tr_takhsis_postsazemaniRowChangeEvent(CType(e.Row,tas_tr_takhsis_postsazemaniRow), e.Action))
            End If
        End Sub
        
        Public Sub Removetas_tr_takhsis_postsazemaniRow(ByVal row As tas_tr_takhsis_postsazemaniRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_tr_takhsis_postsazemaniRow
        Inherits DataRow
        
        Private tabletas_tr_takhsis_postsazemani As tas_tr_takhsis_postsazemaniDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tabletas_tr_takhsis_postsazemani = CType(Me.Table,tas_tr_takhsis_postsazemaniDataTable)
        End Sub
        
        Public Property id_post As Short
            Get
                Return CType(Me(Me.tabletas_tr_takhsis_postsazemani.id_postColumn),Short)
            End Get
            Set
                Me(Me.tabletas_tr_takhsis_postsazemani.id_postColumn) = value
            End Set
        End Property
        
        Public Property code_post_sazemani As Short
            Get
                Try 
                    Return CType(Me(Me.tabletas_tr_takhsis_postsazemani.code_post_sazemaniColumn),Short)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_tr_takhsis_postsazemani.code_post_sazemaniColumn) = value
            End Set
        End Property
        
        Public Property code_personal_takhsis As String
            Get
                If Me.Iscode_personal_takhsisNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletas_tr_takhsis_postsazemani.code_personal_takhsisColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletas_tr_takhsis_postsazemani.code_personal_takhsisColumn) = value
            End Set
        End Property
        
        Public Property code_personal_eblagh As String
            Get
                If Me.Iscode_personal_eblaghNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletas_tr_takhsis_postsazemani.code_personal_eblaghColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletas_tr_takhsis_postsazemani.code_personal_eblaghColumn) = value
            End Set
        End Property
        
        Public Property activate As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletas_tr_takhsis_postsazemani.activateColumn),Boolean)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletas_tr_takhsis_postsazemani.activateColumn) = value
            End Set
        End Property
        
        Public Property date_takhsis As String
            Get
                If Me.Isdate_takhsisNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletas_tr_takhsis_postsazemani.date_takhsisColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletas_tr_takhsis_postsazemani.date_takhsisColumn) = value
            End Set
        End Property
        
        Public Property date_eblagh As String
            Get
                If Me.Isdate_eblaghNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletas_tr_takhsis_postsazemani.date_eblaghColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletas_tr_takhsis_postsazemani.date_eblaghColumn) = value
            End Set
        End Property
        
        Public Property remark As String
            Get
                If Me.IsremarkNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletas_tr_takhsis_postsazemani.remarkColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletas_tr_takhsis_postsazemani.remarkColumn) = value
            End Set
        End Property
        
        Public Property code_bandar As String
            Get
                Return CType(Me(Me.tabletas_tr_takhsis_postsazemani.code_bandarColumn),String)
            End Get
            Set
                Me(Me.tabletas_tr_takhsis_postsazemani.code_bandarColumn) = value
            End Set
        End Property
        
        Public Function Iscode_post_sazemaniNull() As Boolean
            Return Me.IsNull(Me.tabletas_tr_takhsis_postsazemani.code_post_sazemaniColumn)
        End Function
        
        Public Sub Setcode_post_sazemaniNull()
            Me(Me.tabletas_tr_takhsis_postsazemani.code_post_sazemaniColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Iscode_personal_takhsisNull() As Boolean
            Return Me.IsNull(Me.tabletas_tr_takhsis_postsazemani.code_personal_takhsisColumn)
        End Function
        
        Public Sub Setcode_personal_takhsisNull()
            Me(Me.tabletas_tr_takhsis_postsazemani.code_personal_takhsisColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Iscode_personal_eblaghNull() As Boolean
            Return Me.IsNull(Me.tabletas_tr_takhsis_postsazemani.code_personal_eblaghColumn)
        End Function
        
        Public Sub Setcode_personal_eblaghNull()
            Me(Me.tabletas_tr_takhsis_postsazemani.code_personal_eblaghColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsactivateNull() As Boolean
            Return Me.IsNull(Me.tabletas_tr_takhsis_postsazemani.activateColumn)
        End Function
        
        Public Sub SetactivateNull()
            Me(Me.tabletas_tr_takhsis_postsazemani.activateColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isdate_takhsisNull() As Boolean
            Return Me.IsNull(Me.tabletas_tr_takhsis_postsazemani.date_takhsisColumn)
        End Function
        
        Public Sub Setdate_takhsisNull()
            Me(Me.tabletas_tr_takhsis_postsazemani.date_takhsisColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Isdate_eblaghNull() As Boolean
            Return Me.IsNull(Me.tabletas_tr_takhsis_postsazemani.date_eblaghColumn)
        End Function
        
        Public Sub Setdate_eblaghNull()
            Me(Me.tabletas_tr_takhsis_postsazemani.date_eblaghColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsremarkNull() As Boolean
            Return Me.IsNull(Me.tabletas_tr_takhsis_postsazemani.remarkColumn)
        End Function
        
        Public Sub SetremarkNull()
            Me(Me.tabletas_tr_takhsis_postsazemani.remarkColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class tas_tr_takhsis_postsazemaniRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As tas_tr_takhsis_postsazemaniRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As tas_tr_takhsis_postsazemaniRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As tas_tr_takhsis_postsazemaniRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
