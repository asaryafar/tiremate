//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace schedule_manager {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class e_s_Dataset : DataSet {
        
        private emp_settingDataTable tableemp_setting;
        
        public e_s_Dataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected e_s_Dataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["emp_setting"] != null)) {
                    this.Tables.Add(new emp_settingDataTable(ds.Tables["emp_setting"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public emp_settingDataTable emp_setting {
            get {
                return this.tableemp_setting;
            }
        }
        
        public override DataSet Clone() {
            e_s_Dataset cln = ((e_s_Dataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["emp_setting"] != null)) {
                this.Tables.Add(new emp_settingDataTable(ds.Tables["emp_setting"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableemp_setting = ((emp_settingDataTable)(this.Tables["emp_setting"]));
            if ((this.tableemp_setting != null)) {
                this.tableemp_setting.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "e_s_Dataset";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/e_s_Dataset.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableemp_setting = new emp_settingDataTable();
            this.Tables.Add(this.tableemp_setting);
        }
        
        private bool ShouldSerializeemp_setting() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void emp_settingRowChangeEventHandler(object sender, emp_settingRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class emp_settingDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnemp_ID;
            
            private DataColumn columnwork_start_time;
            
            private DataColumn columnwork_end_time;
            
            private DataColumn columnweek_num;
            
            private DataColumn columnwork_week_sun;
            
            private DataColumn columnwork_week_mon;
            
            private DataColumn columnwork_week_tue;
            
            private DataColumn columnwork_week_wed;
            
            private DataColumn columnwork_week_thu;
            
            private DataColumn columnwork_week_fri;
            
            private DataColumn columnwork_week_sat;
            
            private DataColumn columnweek_start_day;
            
            internal emp_settingDataTable() : 
                    base("emp_setting") {
                this.InitClass();
            }
            
            internal emp_settingDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn emp_IDColumn {
                get {
                    return this.columnemp_ID;
                }
            }
            
            internal DataColumn work_start_timeColumn {
                get {
                    return this.columnwork_start_time;
                }
            }
            
            internal DataColumn work_end_timeColumn {
                get {
                    return this.columnwork_end_time;
                }
            }
            
            internal DataColumn week_numColumn {
                get {
                    return this.columnweek_num;
                }
            }
            
            internal DataColumn work_week_sunColumn {
                get {
                    return this.columnwork_week_sun;
                }
            }
            
            internal DataColumn work_week_monColumn {
                get {
                    return this.columnwork_week_mon;
                }
            }
            
            internal DataColumn work_week_tueColumn {
                get {
                    return this.columnwork_week_tue;
                }
            }
            
            internal DataColumn work_week_wedColumn {
                get {
                    return this.columnwork_week_wed;
                }
            }
            
            internal DataColumn work_week_thuColumn {
                get {
                    return this.columnwork_week_thu;
                }
            }
            
            internal DataColumn work_week_friColumn {
                get {
                    return this.columnwork_week_fri;
                }
            }
            
            internal DataColumn work_week_satColumn {
                get {
                    return this.columnwork_week_sat;
                }
            }
            
            internal DataColumn week_start_dayColumn {
                get {
                    return this.columnweek_start_day;
                }
            }
            
            public emp_settingRow this[int index] {
                get {
                    return ((emp_settingRow)(this.Rows[index]));
                }
            }
            
            public event emp_settingRowChangeEventHandler emp_settingRowChanged;
            
            public event emp_settingRowChangeEventHandler emp_settingRowChanging;
            
            public event emp_settingRowChangeEventHandler emp_settingRowDeleted;
            
            public event emp_settingRowChangeEventHandler emp_settingRowDeleting;
            
            public void Addemp_settingRow(emp_settingRow row) {
                this.Rows.Add(row);
            }
            
            public emp_settingRow Addemp_settingRow(long emp_ID, System.DateTime work_start_time, System.DateTime work_end_time, bool week_num, bool work_week_sun, bool work_week_mon, bool work_week_tue, bool work_week_wed, bool work_week_thu, bool work_week_fri, bool work_week_sat, int week_start_day) {
                emp_settingRow rowemp_settingRow = ((emp_settingRow)(this.NewRow()));
                rowemp_settingRow.ItemArray = new object[] {
                        emp_ID,
                        work_start_time,
                        work_end_time,
                        week_num,
                        work_week_sun,
                        work_week_mon,
                        work_week_tue,
                        work_week_wed,
                        work_week_thu,
                        work_week_fri,
                        work_week_sat,
                        week_start_day};
                this.Rows.Add(rowemp_settingRow);
                return rowemp_settingRow;
            }
            
            public emp_settingRow FindByemp_ID(long emp_ID) {
                return ((emp_settingRow)(this.Rows.Find(new object[] {
                            emp_ID})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                emp_settingDataTable cln = ((emp_settingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new emp_settingDataTable();
            }
            
            internal void InitVars() {
                this.columnemp_ID = this.Columns["emp_ID"];
                this.columnwork_start_time = this.Columns["work_start_time"];
                this.columnwork_end_time = this.Columns["work_end_time"];
                this.columnweek_num = this.Columns["week_num"];
                this.columnwork_week_sun = this.Columns["work_week_sun"];
                this.columnwork_week_mon = this.Columns["work_week_mon"];
                this.columnwork_week_tue = this.Columns["work_week_tue"];
                this.columnwork_week_wed = this.Columns["work_week_wed"];
                this.columnwork_week_thu = this.Columns["work_week_thu"];
                this.columnwork_week_fri = this.Columns["work_week_fri"];
                this.columnwork_week_sat = this.Columns["work_week_sat"];
                this.columnweek_start_day = this.Columns["week_start_day"];
            }
            
            private void InitClass() {
                this.columnemp_ID = new DataColumn("emp_ID", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnemp_ID);
                this.columnwork_start_time = new DataColumn("work_start_time", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnwork_start_time);
                this.columnwork_end_time = new DataColumn("work_end_time", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnwork_end_time);
                this.columnweek_num = new DataColumn("week_num", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnweek_num);
                this.columnwork_week_sun = new DataColumn("work_week_sun", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnwork_week_sun);
                this.columnwork_week_mon = new DataColumn("work_week_mon", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnwork_week_mon);
                this.columnwork_week_tue = new DataColumn("work_week_tue", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnwork_week_tue);
                this.columnwork_week_wed = new DataColumn("work_week_wed", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnwork_week_wed);
                this.columnwork_week_thu = new DataColumn("work_week_thu", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnwork_week_thu);
                this.columnwork_week_fri = new DataColumn("work_week_fri", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnwork_week_fri);
                this.columnwork_week_sat = new DataColumn("work_week_sat", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnwork_week_sat);
                this.columnweek_start_day = new DataColumn("week_start_day", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnweek_start_day);
                this.Constraints.Add(new UniqueConstraint("Constraint1", new DataColumn[] {
                                this.columnemp_ID}, true));
                this.columnemp_ID.AllowDBNull = false;
                this.columnemp_ID.Unique = true;
            }
            
            public emp_settingRow Newemp_settingRow() {
                return ((emp_settingRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new emp_settingRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(emp_settingRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.emp_settingRowChanged != null)) {
                    this.emp_settingRowChanged(this, new emp_settingRowChangeEvent(((emp_settingRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.emp_settingRowChanging != null)) {
                    this.emp_settingRowChanging(this, new emp_settingRowChangeEvent(((emp_settingRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.emp_settingRowDeleted != null)) {
                    this.emp_settingRowDeleted(this, new emp_settingRowChangeEvent(((emp_settingRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.emp_settingRowDeleting != null)) {
                    this.emp_settingRowDeleting(this, new emp_settingRowChangeEvent(((emp_settingRow)(e.Row)), e.Action));
                }
            }
            
            public void Removeemp_settingRow(emp_settingRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class emp_settingRow : DataRow {
            
            private emp_settingDataTable tableemp_setting;
            
            internal emp_settingRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableemp_setting = ((emp_settingDataTable)(this.Table));
            }
            
            public long emp_ID {
                get {
                    return ((long)(this[this.tableemp_setting.emp_IDColumn]));
                }
                set {
                    this[this.tableemp_setting.emp_IDColumn] = value;
                }
            }
            
            public System.DateTime work_start_time {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableemp_setting.work_start_timeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemp_setting.work_start_timeColumn] = value;
                }
            }
            
            public System.DateTime work_end_time {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableemp_setting.work_end_timeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemp_setting.work_end_timeColumn] = value;
                }
            }
            
            public bool week_num {
                get {
                    try {
                        return ((bool)(this[this.tableemp_setting.week_numColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemp_setting.week_numColumn] = value;
                }
            }
            
            public bool work_week_sun {
                get {
                    try {
                        return ((bool)(this[this.tableemp_setting.work_week_sunColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemp_setting.work_week_sunColumn] = value;
                }
            }
            
            public bool work_week_mon {
                get {
                    try {
                        return ((bool)(this[this.tableemp_setting.work_week_monColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemp_setting.work_week_monColumn] = value;
                }
            }
            
            public bool work_week_tue {
                get {
                    try {
                        return ((bool)(this[this.tableemp_setting.work_week_tueColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemp_setting.work_week_tueColumn] = value;
                }
            }
            
            public bool work_week_wed {
                get {
                    try {
                        return ((bool)(this[this.tableemp_setting.work_week_wedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemp_setting.work_week_wedColumn] = value;
                }
            }
            
            public bool work_week_thu {
                get {
                    try {
                        return ((bool)(this[this.tableemp_setting.work_week_thuColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemp_setting.work_week_thuColumn] = value;
                }
            }
            
            public bool work_week_fri {
                get {
                    try {
                        return ((bool)(this[this.tableemp_setting.work_week_friColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemp_setting.work_week_friColumn] = value;
                }
            }
            
            public bool work_week_sat {
                get {
                    try {
                        return ((bool)(this[this.tableemp_setting.work_week_satColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemp_setting.work_week_satColumn] = value;
                }
            }
            
            public int week_start_day {
                get {
                    try {
                        return ((int)(this[this.tableemp_setting.week_start_dayColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemp_setting.week_start_dayColumn] = value;
                }
            }
            
            public bool Iswork_start_timeNull() {
                return this.IsNull(this.tableemp_setting.work_start_timeColumn);
            }
            
            public void Setwork_start_timeNull() {
                this[this.tableemp_setting.work_start_timeColumn] = System.Convert.DBNull;
            }
            
            public bool Iswork_end_timeNull() {
                return this.IsNull(this.tableemp_setting.work_end_timeColumn);
            }
            
            public void Setwork_end_timeNull() {
                this[this.tableemp_setting.work_end_timeColumn] = System.Convert.DBNull;
            }
            
            public bool Isweek_numNull() {
                return this.IsNull(this.tableemp_setting.week_numColumn);
            }
            
            public void Setweek_numNull() {
                this[this.tableemp_setting.week_numColumn] = System.Convert.DBNull;
            }
            
            public bool Iswork_week_sunNull() {
                return this.IsNull(this.tableemp_setting.work_week_sunColumn);
            }
            
            public void Setwork_week_sunNull() {
                this[this.tableemp_setting.work_week_sunColumn] = System.Convert.DBNull;
            }
            
            public bool Iswork_week_monNull() {
                return this.IsNull(this.tableemp_setting.work_week_monColumn);
            }
            
            public void Setwork_week_monNull() {
                this[this.tableemp_setting.work_week_monColumn] = System.Convert.DBNull;
            }
            
            public bool Iswork_week_tueNull() {
                return this.IsNull(this.tableemp_setting.work_week_tueColumn);
            }
            
            public void Setwork_week_tueNull() {
                this[this.tableemp_setting.work_week_tueColumn] = System.Convert.DBNull;
            }
            
            public bool Iswork_week_wedNull() {
                return this.IsNull(this.tableemp_setting.work_week_wedColumn);
            }
            
            public void Setwork_week_wedNull() {
                this[this.tableemp_setting.work_week_wedColumn] = System.Convert.DBNull;
            }
            
            public bool Iswork_week_thuNull() {
                return this.IsNull(this.tableemp_setting.work_week_thuColumn);
            }
            
            public void Setwork_week_thuNull() {
                this[this.tableemp_setting.work_week_thuColumn] = System.Convert.DBNull;
            }
            
            public bool Iswork_week_friNull() {
                return this.IsNull(this.tableemp_setting.work_week_friColumn);
            }
            
            public void Setwork_week_friNull() {
                this[this.tableemp_setting.work_week_friColumn] = System.Convert.DBNull;
            }
            
            public bool Iswork_week_satNull() {
                return this.IsNull(this.tableemp_setting.work_week_satColumn);
            }
            
            public void Setwork_week_satNull() {
                this[this.tableemp_setting.work_week_satColumn] = System.Convert.DBNull;
            }
            
            public bool Isweek_start_dayNull() {
                return this.IsNull(this.tableemp_setting.week_start_dayColumn);
            }
            
            public void Setweek_start_dayNull() {
                this[this.tableemp_setting.week_start_dayColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class emp_settingRowChangeEvent : EventArgs {
            
            private emp_settingRow eventRow;
            
            private DataRowAction eventAction;
            
            public emp_settingRowChangeEvent(emp_settingRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public emp_settingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
